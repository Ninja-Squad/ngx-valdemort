var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/DefaultValidationErrors.html",[0,1.794,1,1.247]],["body/injectables/DefaultValidationErrors.html",[0,2.819,1,1.959,2,2.626,3,0.89,4,0.89,5,0.785,6,4.132,7,0.772,8,3.782,9,1.264,10,1.98,11,1.099,12,0.857,13,0.834,14,0.736,15,4.669,16,0.849,17,1.099,18,3.809,19,2.2,20,0.849,21,2.481,22,3.809,23,1.959,24,4.669,25,2.481,26,0.511,27,0.969,28,1.51,29,1.693,30,0.736,31,0.045,32,2.481,33,1.416,34,1.561,35,3.782,36,1.344,37,1.959,38,3.782,39,0.921,40,0.785,41,1.004,42,1.587,43,1.587,44,3.085,45,2.626,46,0.89,47,0.785,48,0.035,49,0.035]],["title/directives/DefaultValidationErrorsDirective.html",[14,0.469,50,1.579]],["body/directives/DefaultValidationErrorsDirective.html",[1,2.025,3,0.556,4,0.556,5,0.49,6,3.78,7,0.75,9,0.79,10,1.275,11,1.198,12,0.785,13,0.803,14,0.85,16,1.009,17,1.136,18,2.778,19,1.605,20,0.619,22,2.778,23,2.025,26,0.319,27,0.707,28,1.191,29,1.702,30,0.818,31,0.046,34,1.461,36,1.06,37,1.429,39,0.794,40,0.49,41,0.627,42,0.991,43,0.991,45,2.365,46,0.556,47,0.49,48,0.026,49,0.026,50,1.81,51,2.363,52,1.016,53,3.406,54,1.614,55,1.016,56,3.406,57,2.778,58,3.406,59,1.807,60,4.154,61,3.406,62,1.636,63,3.406,64,2.778,65,3.406,66,1.221,67,2.323,68,2.323,69,2.274,70,2.274,71,2.274,72,1.607,73,2.778,74,3.406,75,3.406,76,1.605,77,1.605,78,1.138,79,1.138,80,1.275,81,1.605,82,1.605,83,1.605,84,2.365,85,2.365,86,2.056,87,3.406,88,2.365,89,1.335,90,1.275,91,3.406,92,2.056,93,3.406,94,1.81,95,2.122,96,1.426,97,1.138,98,1.605,99,1.016,100,0.904,101,2.122,102,2.122,103,2.056,104,2.323,105,0.991,106,2.363,107,2.363,108,1.255,109,0.79,110,0.885,111,2.363,112,0.991,113,1.81,114,2.122,115,2.778,116,1.81,117,2.363,118,1.81,119,2.323,120,2.323,121,1.461,122,2.059,123,1.81,124,2.363,125,1.255,126,1.255,127,1.255,128,1.255,129,2.363,130,1.255,131,2.363,132,2.363,133,1.255,134,1.255,135,1.255]],["title/interfaces/ErrorsToDisplay.html",[136,0.617,137,1.579]],["body/interfaces/ErrorsToDisplay.html",[1,1.474,3,0.364,4,0.364,5,0.321,7,0.689,10,1.316,11,0.827,12,0.772,13,0.844,14,0.677,16,0.916,17,1.081,19,0.729,20,0.904,21,0.822,23,1.871,26,0.334,27,0.512,28,0.918,29,1.704,30,0.759,31,0.046,32,2.557,33,1.316,34,1.368,36,1.019,37,1.611,39,0.835,40,0.321,41,0.41,42,0.649,43,0.649,46,0.364,47,0.512,48,0.019,49,0.023,52,0.461,54,1.029,55,1.048,59,1.437,62,1.153,66,0.724,67,1.311,68,0.822,69,1.451,70,1.451,71,1.656,72,1.28,76,1.809,77,0.729,78,1.609,79,1.808,80,0.579,81,0.729,82,0.729,83,0.729,89,1.368,90,0.924,94,0.822,95,1.311,97,0.517,98,1.163,99,0.461,100,0.817,101,0.822,102,0.822,104,0.822,105,0.649,109,0.825,110,0.924,113,1.311,114,1.311,116,0.822,118,0.822,119,1.311,120,1.636,121,1.283,122,1.656,123,0.822,125,0.822,126,0.822,127,0.822,128,1.311,130,1.311,133,0.822,134,0.822,135,0.822,136,0.639,137,2.282,138,0.729,139,0.41,140,0.649,141,2.318,142,0.934,143,1.49,144,2.019,145,1.49,146,2.37,147,2.122,148,2.122,149,1.636,150,1.636,151,1.49,152,0.729,153,0.729,154,1.035,155,1.163,156,0.934,157,1.49,158,1.49,159,1.49,160,0.822,161,0.934,162,0.934,163,0.934,164,1.636,165,0.822,166,1.49,167,0.934,168,0.934,169,0.822,170,0.918,171,0.579,172,0.579,173,0.579,174,0.579,175,0.579,176,0.579,177,0.579,178,0.934,179,1.163,180,1.809,181,1.292,182,3.003,183,1.636,184,1.474,185,1.337,186,1.867,187,1.163,188,0.822,189,1.163,190,0.822,191,0.822,192,1.669,193,0.934,194,0.934,195,0.934,196,0.934,197,0.934,198,0.934,199,0.822,200,0.924,201,1.859,202,0.934,203,0.729,204,1.656,205,1.636,206,1.636,207,1.49,208,2.122,209,2.122,210,1.859,211,0.729,212,0.934,213,0.729,214,0.934,215,0.934,216,1.311,217,0.934,218,0.822,219,2.04,220,0.918,221,0.918,222,0.822,223,1.859,224,0.649,225,1.163,226,1.163,227,1.163,228,0.822,229,1.163,230,1.163,231,0.822,232,1.311,233,1.311,234,0.822,235,0.934,236,0.934,237,0.934,238,0.934,239,0.822,240,0.822,241,1.163,242,0.649,243,0.934,244,0.934,245,0.934,246,1.49,247,1.49,248,1.49,249,1.49,250,0.934,251,0.934,252,0.934,253,0.934,254,0.729,255,0.934,256,0.934,257,0.934,258,1.311,259,0.934,260,0.934,261,0.729,262,0.934,263,0.934,264,0.579,265,1.49,266,1.49,267,1.311,268,1.636,269,1.311,270,0.729,271,0.822,272,0.934,273,0.934,274,0.934,275,0.934,276,1.859,277,0.934,278,0.934,279,0.822,280,0.934,281,2.692,282,0.934,283,1.867,284,0.934,285,1.859,286,0.934,287,0.934,288,0.934,289,0.934,290,0.934,291,0.934,292,0.934,293,0.934,294,0.934,295,0.934,296,0.934,297,0.934,298,2.593,299,0.934,300,0.934,301,0.934,302,0.934,303,0.934,304,0.934,305,0.934,306,1.49,307,0.934,308,1.49,309,0.934,310,1.49,311,0.934,312,0.934,313,0.934,314,0.934,315,0.934,316,0.934,317,0.934,318,0.934,319,0.934,320,1.49,321,0.934,322,0.822,323,0.934,324,2.318,325,0.934,326,1.859,327,0.934,328,0.934,329,0.934,330,0.934,331,0.934,332,0.729,333,0.934,334,0.729,335,0.934,336,0.934,337,0.934,338,0.934,339,0.934]],["title/interfaces/FallbackError.html",[136,0.617,169,1.579]],["body/interfaces/FallbackError.html",[1,1.481,3,0.367,4,0.367,5,0.324,7,0.69,10,1.322,11,0.831,12,0.774,13,0.828,14,0.679,16,0.918,17,1.085,19,0.735,20,0.906,21,0.829,23,1.876,26,0.336,27,0.516,28,0.923,29,1.641,30,0.786,31,0.046,32,2.29,33,1.613,34,1.373,36,0.822,37,1.299,39,0.838,40,0.324,41,0.414,42,0.655,43,0.655,46,0.367,47,0.516,48,0.019,49,0.024,52,0.465,54,1.035,55,1.053,59,1.444,62,1.159,66,0.729,67,1.32,68,0.829,69,1.459,70,1.459,71,1.664,72,1.285,76,1.817,77,0.735,78,1.612,79,1.81,80,0.584,81,0.735,82,0.735,83,0.735,89,1.373,90,0.93,94,0.829,95,1.32,97,0.522,98,1.171,99,0.465,100,0.822,101,0.829,102,0.829,104,0.829,105,0.655,109,0.831,110,0.93,113,1.32,114,1.32,116,0.829,118,0.829,119,1.32,120,1.645,121,1.289,122,1.664,123,0.829,125,0.829,126,0.829,127,0.829,128,1.32,130,1.32,133,0.829,134,0.829,135,0.829,136,0.643,137,2.183,138,0.735,139,0.414,140,0.655,141,1.5,142,0.942,143,1.5,144,2.024,145,1.5,146,2.377,147,2.132,148,2.132,149,1.645,150,1.645,151,1.5,152,0.735,153,0.735,154,1.042,155,1.171,156,0.942,157,1.5,158,1.5,159,1.5,160,0.829,161,0.942,162,0.942,163,0.942,164,1.645,165,0.829,166,1.5,167,0.942,168,0.942,169,1.32,170,1.15,171,0.584,172,0.584,173,0.584,174,0.584,175,0.584,176,0.584,177,0.584,178,0.942,179,1.171,180,1.817,181,1.299,182,3.009,183,1.645,184,1.481,185,1.34,186,1.876,187,1.171,188,0.829,189,1.171,190,0.829,191,0.829,192,1.675,193,0.942,194,0.942,195,0.942,196,0.942,197,0.942,198,0.942,199,0.829,200,0.93,201,1.87,202,0.942,203,0.735,204,1.664,205,1.645,206,1.645,207,1.5,208,2.132,209,2.132,210,1.87,211,0.735,212,0.942,213,0.735,214,0.942,215,0.942,216,1.32,217,0.942,218,0.829,219,2.049,220,0.923,221,0.923,222,0.829,223,1.87,224,0.655,225,1.171,226,1.171,227,1.171,228,0.829,229,1.171,230,1.171,231,0.829,232,1.32,233,1.32,234,0.829,235,0.942,236,0.942,237,0.942,238,0.942,239,0.829,240,0.829,241,1.171,242,0.655,243,0.942,244,0.942,245,0.942,246,1.5,247,1.5,248,1.5,249,1.5,250,0.942,251,0.942,252,0.942,253,0.942,254,0.735,255,0.942,256,0.942,257,0.942,258,1.32,259,0.942,260,0.942,261,0.735,262,0.942,263,0.942,264,0.584,265,1.5,266,1.5,267,1.32,268,1.645,269,1.32,270,0.735,271,0.829,272,0.942,273,0.942,274,0.942,275,0.942,276,1.87,277,0.942,278,0.942,279,0.829,280,0.942,281,2.701,282,0.942,283,1.876,284,0.942,285,1.87,286,0.942,287,0.942,288,0.942,289,0.942,290,0.942,291,0.942,292,0.942,293,0.942,294,0.942,295,0.942,296,0.942,297,0.942,298,2.601,299,0.942,300,0.942,301,0.942,302,0.942,303,0.942,304,0.942,305,0.942,306,1.5,307,0.942,308,1.5,309,0.942,310,1.5,311,0.942,312,0.942,313,0.942,314,0.942,315,0.942,316,0.942,317,0.942,318,0.942,319,0.942,320,1.5,321,0.942,322,0.829,323,0.942,324,2.328,325,0.942,326,1.87,327,0.942,328,0.942,329,0.942,330,0.942,331,0.942,332,0.735,333,0.942,334,0.735,335,0.942,336,0.942,337,0.942,338,0.942,339,0.942]],["title/injectables/ValdemortConfig.html",[0,1.794,154,1.247]],["body/injectables/ValdemortConfig.html",[0,1.952,2,1.527,3,0.517,4,0.517,5,0.456,7,0.675,9,0.735,10,1.582,11,0.761,12,0.871,13,0.854,14,0.51,16,0.966,17,0.761,20,0.768,26,0.297,27,0.671,30,0.666,31,0.046,33,2.042,34,1.627,37,1.356,39,0.587,40,0.456,44,1.794,45,2.662,46,0.761,47,1.057,48,0.025,49,0.025,54,1.08,55,0.964,66,0.994,78,1.703,79,1.794,89,1.281,90,1.21,98,1.523,100,1.121,112,1.975,122,2.352,146,2.037,149,2.037,150,2.037,152,1.036,153,1.991,154,1.356,170,1.26,180,1.806,181,1.608,185,1.41,187,1.523,189,2.441,200,0.823,204,1.523,205,2.502,211,1.991,216,1.718,224,1.608,226,2.504,227,1.991,228,1.718,229,2.293,231,1.718,232,2.245,233,1.718,234,1.718,241,2.218,242,1.773,254,1.523,258,2.037,267,1.718,269,1.718,270,1.523,279,2.037,322,1.718,332,1.523,334,1.523,340,3.84,341,1.794,342,2.637,343,3.232,344,3.232,345,3.232,346,3.232,347,2.637,348,3.232,349,1.718,350,3.232,351,1.523,352,3.232,353,2.637,354,3.127,355,2.199,356,3.127,357,3.232,358,3.232,359,2.199,360,4.993,361,4.226,362,4.226,363,4.226,364,4.226,365,4.993,366,2.934,367,4.226,368,3.447,369,4.226,370,4.226,371,3.232,372,2.199,373,2.637,374,1.952,375,2.199,376,2.637,377,4.226,378,2.637,379,3.232,380,3.232,381,2.199,382,3.232,383,3.232,384,3.232,385,3.232,386,4.708,387,2.637,388,3.232,389,3.232,390,2.637,391,3.232,392,3.232,393,3.232,394,3.447,395,3.232,396,3.232,397,2.637,398,3.232,399,2.199,400,2.199,401,2.199]],["title/modules/ValdemortModule.html",[349,1.579,402,1.4]],["body/modules/ValdemortModule.html",[3,0.876,4,0.876,5,0.773,7,0.711,12,0.587,31,0.045,36,1.537,39,0.983,40,0.773,41,1.537,42,1.562,43,1.562,46,0.876,47,0.773,48,0.035,49,0.035,50,3.078,261,2.178,264,2.168,349,1.978,374,2.248,402,2.763,403,2.248,404,2.248,405,2.585,406,3.037,407,3.037,408,4.103,409,3.037,410,3.037,411,3.037,412,3.772,413,3.037,414,2.585,415,3.723,416,4.624,417,3.723,418,3.723]],["title/interfaces/ValidationErrorContext.html",[136,0.617,419,2.063]],["body/interfaces/ValidationErrorContext.html",[3,0.847,4,0.847,5,0.747,7,0.612,9,1.203,11,0.847,12,0.568,13,0.714,14,0.82,16,1.02,17,1.165,20,0.654,25,2.762,26,0.486,27,0.939,30,0.845,31,0.045,39,0.654,40,0.747,41,1.379,46,0.847,47,0.747,48,0.034,49,0.034,52,1.073,55,1.073,59,1.695,66,0.847,72,1.35,89,1.203,97,1.203,99,1.073,100,1.314,121,1.513,136,0.747,138,1.696,139,0.955,144,2.078,170,1.477,171,1.347,172,1.347,173,1.347,174,1.347,175,1.347,176,1.347,177,1.347,185,1.314,192,1.347,200,1.347,220,1.073,221,1.073,351,1.696,419,3.439,420,2.936,421,3.138,422,2.99,423,3.144,424,1.899,425,2.733,426,2.173,427,2.173,428,2.936,429,2.936,430,2.936,431,2.173,432,2.173,433,2.173,434,2.173,435,2.173]],["title/directives/ValidationErrorDirective.html",[14,0.469,41,0.788]],["body/directives/ValidationErrorDirective.html",[3,0.75,4,0.75,5,0.662,7,0.671,9,1.066,11,0.985,12,0.738,13,0.783,14,0.851,16,0.962,17,1.246,20,0.761,25,2.741,26,0.431,27,0.869,28,0.951,30,0.873,31,0.045,33,1.194,34,1.66,39,0.58,40,0.662,41,1.405,46,0.75,47,0.662,48,0.032,49,0.032,52,1.249,55,1.249,59,1.859,66,0.985,72,0.951,89,1.4,96,1.925,97,1.4,99,1.249,100,1.369,103,2.529,105,1.338,108,2.226,109,1.4,110,1.568,112,1.338,121,1.66,136,0.662,139,1.369,144,2.084,170,1.249,171,1.194,172,1.194,173,1.194,174,1.194,175,1.194,176,1.194,177,1.194,185,0.846,192,1.194,200,1.568,220,1.249,221,1.249,351,1.973,419,3.248,420,2.602,421,1.925,422,3.344,423,3.582,424,2.084,425,2.999,426,2.529,427,2.529,428,3.417,429,3.417,430,2.602,431,2.529,432,1.925,433,2.824,434,2.529,435,1.925,436,3.417,437,3.417,438,3.417,439,2.602,440,4.188,441,3.189,442,3.189]],["title/components/ValidationErrorsComponent.html",[20,0.54,264,1.112]],["body/components/ValidationErrorsComponent.html",[1,1.646,3,0.264,4,0.264,5,0.233,7,0.708,9,0.633,10,1.529,11,0.923,12,0.841,13,0.845,14,0.742,16,0.952,17,1.163,19,1.159,20,0.941,21,1.007,23,2.003,26,0.332,27,0.393,28,1.045,29,1.653,30,0.772,31,0.046,32,2.245,33,1.667,34,1.721,36,0.857,37,1.213,39,0.742,40,0.233,41,0.503,42,0.47,43,0.47,46,0.264,47,0.393,48,0.014,49,0.022,50,0.596,52,0.565,54,1.172,55,1.218,59,1.627,62,1.312,64,1.545,66,1.07,67,1.536,68,1.007,69,1.652,70,1.652,71,1.848,72,1.403,76,1.99,77,0.892,78,1.683,79,1.835,80,0.709,81,0.892,82,0.892,83,0.892,89,1.365,90,1.082,92,1.144,94,1.007,95,1.307,96,0.677,97,1.172,98,1.652,99,0.565,100,0.767,101,1.307,102,1.307,103,1.144,104,1.536,105,0.795,108,0.596,109,1.311,110,0.921,112,0.795,113,1.536,114,1.307,115,1.545,116,1.007,118,1.007,119,1.536,120,1.863,121,1.412,122,1.99,123,1.007,125,0.596,126,0.596,127,0.596,128,1.536,130,1.307,133,0.596,134,0.596,135,0.596,136,0.51,137,1.863,139,1.181,140,0.47,141,1.144,142,0.677,143,1.485,144,2.053,145,1.485,146,2.17,147,2.368,148,2.253,149,1.307,150,1.307,151,1.144,152,0.528,153,0.528,154,1.213,155,0.892,156,0.677,157,1.485,158,1.485,159,1.485,160,0.596,161,0.677,162,0.677,163,0.677,164,1.307,165,0.596,166,1.144,167,0.677,168,0.677,169,0.596,170,0.963,171,0.42,172,0.42,173,0.42,174,0.42,175,0.42,176,0.42,177,0.42,178,0.677,179,0.892,180,1.758,181,1.032,182,2.745,183,1.307,184,1.213,185,1.325,186,1.536,187,0.892,188,0.596,189,1.362,190,0.596,191,0.596,192,1.469,193,0.677,194,0.677,195,0.677,196,0.677,197,0.677,198,0.677,199,1.007,200,1.082,201,2.117,202,1.144,203,0.892,204,1.848,205,1.863,206,1.863,207,1.745,208,2.368,209,2.368,210,2.117,211,0.892,212,1.144,213,0.892,214,1.144,215,1.144,216,1.536,217,1.144,218,1.007,219,2.245,220,1.045,221,1.045,222,1.007,223,2.117,224,0.795,225,1.362,226,1.362,227,1.362,228,1.007,229,1.362,230,1.522,231,1.007,232,1.536,233,1.717,234,1.007,235,1.144,236,1.144,237,1.144,238,1.144,239,1.007,240,1.007,241,1.362,242,0.795,243,1.144,244,1.144,245,1.144,246,1.745,247,1.745,248,1.745,249,1.745,250,1.144,251,1.144,252,1.144,253,1.144,254,0.892,255,1.144,256,1.144,257,1.144,258,1.536,259,0.677,260,0.677,261,0.892,262,1.144,263,1.144,264,1.082,265,1.745,266,1.745,267,1.536,268,1.717,269,1.536,270,0.892,271,1.007,272,1.144,273,1.144,274,1.144,275,1.144,276,2.466,277,1.485,278,1.144,279,1.307,280,1.144,281,2.368,282,0.677,283,1.536,284,0.677,285,1.485,286,1.144,287,1.144,288,1.144,289,1.144,290,1.144,291,1.485,292,1.485,293,1.485,294,0.677,295,0.677,296,0.677,297,0.677,298,2.253,299,0.677,300,0.677,301,0.677,302,0.677,303,0.677,304,1.745,305,0.677,306,1.144,307,0.677,308,1.144,309,0.677,310,1.144,311,0.677,312,0.677,313,0.677,314,0.677,315,0.677,316,0.677,317,0.677,318,0.677,319,0.677,320,1.144,321,0.677,322,0.596,323,0.677,324,1.951,325,0.677,326,1.485,327,0.677,328,0.677,329,0.677,330,0.677,331,0.677,332,0.528,333,0.677,334,0.528,335,0.677,336,0.677,337,0.677,338,0.677,339,0.677,405,0.779,424,0.795,438,1.545,443,1.121,444,1.121,445,1.121,446,1.121,447,1.121,448,1.121,449,1.121,450,1.121,451,1.121,452,1.121,453,1.121,454,1.121,455,1.121,456,1.121,457,2.891,458,1.121,459,1.121,460,1.121,461,0.779,462,1.121]],["title/interfaces/ValidationFallbackContext.html",[136,0.617,463,2.063]],["body/interfaces/ValidationFallbackContext.html",[3,0.823,4,0.823,5,0.726,7,0.661,9,1.169,11,0.823,12,0.552,13,0.771,14,0.837,16,1.049,17,0.823,20,0.636,25,2.733,26,0.473,27,0.923,29,1.169,30,0.895,31,0.045,36,1.365,39,0.636,40,0.726,46,0.823,47,0.726,48,0.034,49,0.034,52,1.043,55,1.043,66,1.046,72,1.326,80,1.31,84,3.088,85,2.429,86,2.112,88,2.429,90,1.31,97,1.169,99,1.043,100,1.18,121,1.486,136,0.726,138,1.648,139,0.928,170,1.618,171,1.31,172,1.31,173,1.31,174,1.31,175,1.31,176,1.31,177,1.31,185,1.297,192,1.31,203,1.648,220,1.043,221,1.043,230,1.648,242,1.468,351,1.648,366,2.429,421,3.106,422,2.951,424,1.468,425,2.685,426,2.112,427,2.112,432,2.112,433,2.112,434,2.112,435,2.112,461,2.429,463,3.394,464,2.854,465,2.854,466,2.854,467,2.854,468,2.854,469,2.854]],["title/directives/ValidationFallbackDirective.html",[14,0.469,36,0.788]],["body/directives/ValidationFallbackDirective.html",[3,0.744,4,0.744,5,0.657,7,0.714,9,1.057,11,0.98,12,0.657,13,0.833,14,0.872,16,1.035,17,0.98,20,0.757,25,2.734,26,0.428,27,0.865,28,0.943,29,1.393,30,0.849,31,0.045,34,1.557,36,1.402,39,0.575,40,0.657,46,0.744,47,0.657,48,0.032,49,0.032,52,1.242,55,1.242,66,1.165,72,0.943,80,1.56,84,3.438,85,2.893,86,2.515,88,2.893,90,1.56,96,1.91,97,1.393,99,1.242,100,1.236,103,2.515,105,1.327,108,2.214,109,1.393,110,1.56,112,1.327,121,1.655,136,0.657,139,1.314,170,1.242,171,1.184,172,1.184,173,1.184,174,1.184,175,1.184,176,1.184,177,1.184,185,0.839,192,1.184,203,1.963,220,1.242,221,1.242,230,1.963,242,1.748,351,1.963,366,2.893,421,1.91,422,3.338,424,1.748,425,2.989,426,2.515,427,2.515,432,1.91,433,2.813,434,2.515,435,1.91,436,3.399,437,3.399,439,2.581,461,2.893,463,3.235,464,2.581,465,3.399,466,3.399,467,3.399,468,3.399,469,3.399,470,3.164,471,3.164,472,3.164]],["title/interfaces/ValidationState.html",[136,0.617,184,1.247]],["body/interfaces/ValidationState.html",[1,1.47,3,0.362,4,0.362,5,0.319,7,0.688,10,1.312,11,0.824,12,0.771,13,0.843,14,0.676,16,0.915,17,1.08,19,0.725,20,0.903,21,0.818,23,1.867,26,0.332,27,0.51,28,0.915,29,1.635,30,0.758,31,0.046,32,2.277,33,1.312,34,1.365,36,0.814,37,1.287,39,0.834,40,0.319,41,0.408,42,0.646,43,0.646,46,0.362,47,0.51,48,0.019,49,0.023,52,0.459,54,1.026,55,1.045,59,1.434,62,1.149,66,0.722,67,1.306,68,0.818,69,1.446,70,1.446,71,1.651,72,1.278,76,1.804,77,0.725,78,1.606,79,1.83,80,0.576,81,0.725,82,0.725,83,0.725,89,1.365,90,0.92,94,0.818,95,1.306,97,0.514,98,1.158,99,0.459,100,0.814,101,0.818,102,0.818,104,0.818,105,0.646,109,0.822,110,0.92,113,1.306,114,1.306,116,0.818,118,0.818,119,1.306,120,1.631,121,1.28,122,1.651,123,0.818,125,0.818,126,0.818,127,0.818,128,1.306,130,1.306,133,0.818,134,0.818,135,0.818,136,0.637,137,2.17,138,0.725,139,0.408,140,0.646,141,1.484,142,0.929,143,1.484,144,2.016,145,1.484,146,2.5,147,2.115,148,2.115,149,1.631,150,1.631,151,2.115,152,0.725,153,0.725,154,1.031,155,1.158,156,0.929,157,1.484,158,1.484,159,1.484,160,0.818,161,0.929,162,0.929,163,0.929,164,1.631,165,0.818,166,1.484,167,0.929,168,0.929,169,0.818,170,0.915,171,0.576,172,0.576,173,0.576,174,0.576,175,0.576,176,0.576,177,0.576,178,0.929,179,1.158,180,1.804,181,1.287,182,2.999,183,1.631,184,1.607,185,1.41,186,2.277,187,1.651,188,0.818,189,1.158,190,0.818,191,0.818,192,1.666,193,0.929,194,0.929,195,0.929,196,0.929,197,0.929,198,0.929,199,0.818,200,0.92,201,1.853,202,0.929,203,0.725,204,1.651,205,1.631,206,1.631,207,1.484,208,2.115,209,2.115,210,1.853,211,0.725,212,0.929,213,0.725,214,0.929,215,0.929,216,1.306,217,0.929,218,0.818,219,2.035,220,0.915,221,0.915,222,0.818,223,1.853,224,0.646,225,1.158,226,1.158,227,1.158,228,0.818,229,1.158,230,1.158,231,0.818,232,1.306,233,1.306,234,0.818,235,0.929,236,0.929,237,0.929,238,0.929,239,0.818,240,0.818,241,1.158,242,0.646,243,0.929,244,0.929,245,0.929,246,1.484,247,1.484,248,1.484,249,1.484,250,0.929,251,0.929,252,0.929,253,0.929,254,0.725,255,0.929,256,0.929,257,0.929,258,1.306,259,0.929,260,0.929,261,0.725,262,0.929,263,0.929,264,0.576,265,1.484,266,1.484,267,1.306,268,1.631,269,1.306,270,0.725,271,0.818,272,0.929,273,0.929,274,0.929,275,0.929,276,1.853,277,0.929,278,0.929,279,0.818,280,0.929,281,2.687,282,0.929,283,1.862,284,0.929,285,1.853,286,0.929,287,0.929,288,0.929,289,0.929,290,0.929,291,0.929,292,0.929,293,0.929,294,0.929,295,0.929,296,0.929,297,0.929,298,2.587,299,0.929,300,0.929,301,0.929,302,0.929,303,0.929,304,0.929,305,0.929,306,1.484,307,0.929,308,1.484,309,0.929,310,1.484,311,0.929,312,0.929,313,0.929,314,0.929,315,0.929,316,0.929,317,0.929,318,0.929,319,0.929,320,1.484,321,0.929,322,0.818,323,0.929,324,2.312,325,0.929,326,1.853,327,0.929,328,0.929,329,0.929,330,0.929,331,0.929,332,0.725,333,0.929,334,0.725,335,0.929,336,0.929,337,0.929,338,0.929,339,0.929]],["title/changelog.html",[473,1.516,474,1.516,475,2.048]],["body/changelog.html",[5,0.411,7,0.404,11,0.466,12,0.471,13,0.312,14,0.568,16,0.729,17,0.466,20,0.36,23,0.83,28,1.196,29,0.999,30,0.471,31,0.044,39,0.36,47,0.411,48,0.023,49,0.023,52,0.59,54,0.662,60,2.438,62,1.946,66,1.106,69,0.933,70,0.933,71,0.933,72,1.074,73,2.938,77,0.933,78,0.662,79,1.572,80,0.741,81,0.933,82,0.933,83,0.933,92,2.174,99,1.074,100,0.793,109,0.662,112,1.683,144,0.83,155,2.668,165,1.052,170,0.59,181,1.254,185,0.525,189,2.134,204,1.89,211,0.933,219,1.588,220,0.59,221,0.59,224,0.83,225,1.697,226,0.933,239,2.726,268,2.132,270,1.408,271,1.052,283,1.588,332,1.408,334,1.89,342,2.438,347,2.438,354,2.438,368,1.615,374,1.195,376,4.184,378,2.438,387,3.513,394,1.615,397,2.438,402,0.933,403,1.195,423,1.374,424,1.683,431,1.195,475,1.615,476,1.979,477,5.198,478,1.615,479,1.979,480,4.579,481,1.979,482,1.979,483,2.438,484,1.979,485,4.702,486,3.601,487,5.258,488,4.593,489,5.31,490,3.984,491,1.979,492,5.049,493,5.129,494,4.184,495,5.198,496,1.979,497,1.979,498,4.307,499,3.273,500,2.989,501,1.979,502,1.979,503,3.601,504,4.307,505,2.989,506,1.979,507,3.601,508,1.979,509,1.979,510,1.979,511,1.979,512,1.979,513,1.979,514,4.529,515,4.529,516,2.989,517,1.979,518,1.979,519,1.979,520,1.979,521,1.979,522,1.979,523,1.979,524,1.979,525,1.979,526,1.979,527,3.601,528,1.615,529,1.979,530,1.979,531,1.979,532,2.989,533,2.989,534,1.979,535,1.979,536,1.979,537,1.979,538,1.615,539,1.979,540,1.979,541,1.979,542,1.979,543,1.979,544,1.979,545,1.979,546,1.979,547,1.979,548,1.979,549,1.979,550,2.989,551,3.601,552,3.601,553,1.979,554,1.979,555,4.307,556,3.601,557,1.979,558,1.979,559,1.979,560,1.979,561,1.979,562,1.979,563,1.979,564,1.979,565,1.979,566,1.979,567,1.979,568,1.979,569,1.979,570,1.979,571,1.979,572,1.979,573,3.601,574,2.989,575,1.979,576,1.979,577,2.989,578,2.989,579,1.979,580,1.979,581,1.374,582,1.979,583,1.979,584,1.979,585,1.979,586,1.979,587,2.989,588,2.989,589,2.989,590,3.601,591,2.989,592,1.979,593,2.989,594,2.989,595,2.989,596,2.989,597,2.989,598,4.529,599,3.601,600,2.438,601,2.989,602,2.989,603,2.989,604,2.989,605,2.989,606,2.989,607,2.989,608,2.989,609,2.989,610,2.989,611,1.979,612,1.979,613,1.979,614,1.979,615,3.601,616,1.979,617,3.601,618,1.979,619,1.979,620,1.979,621,1.979,622,1.979,623,1.979,624,1.979,625,2.989,626,2.989,627,1.979,628,2.438,629,1.979,630,1.979,631,1.979,632,1.979,633,2.989,634,1.979,635,1.979,636,1.979,637,1.979,638,1.979,639,1.979,640,1.979,641,1.979,642,1.979,643,1.979,644,1.979,645,1.979,646,1.979,647,1.979,648,1.979,649,1.979,650,1.979,651,1.979,652,1.979,653,2.989,654,2.938,655,1.979,656,1.979,657,1.979,658,1.979,659,1.979,660,2.989,661,1.979,662,1.979,663,1.979,664,1.979,665,1.979,666,1.979,667,1.979,668,1.979,669,1.979,670,1.979,671,1.979,672,1.979,673,1.979,674,1.979,675,1.979]],["title/dependencies.html",[404,2.148,581,1.744]],["body/dependencies.html",[31,0.044,40,0.935,48,0.039,49,0.039,152,2.123,160,2.394,404,3.129,676,4.506,677,4.506,678,4.506,679,5.456]],["title/miscellaneous/enumerations.html",[680,0.94,681,2.902]],["body/miscellaneous/enumerations.html",[7,0.696,13,0.812,26,0.602,31,0.039,48,0.039,49,0.039,79,1.489,89,1.489,153,2.426,200,1.668,224,1.869,229,2.099,241,2.426,340,3.634,341,4.2,356,3.634,680,1.668,681,3.634,682,4.455]],["title/miscellaneous/functions.html",[680,0.94,683,2.902]],["body/miscellaneous/functions.html",[26,0.598,30,0.697,31,0.042,48,0.039,49,0.039,108,2.35,109,1.478,110,1.655,112,1.855,139,1.173,140,2.151,184,2.337,187,2.083,190,2.35,191,2.724,494,3.607,680,1.655,683,3.607,684,5.127,685,3.07]],["title/index.html",[26,0.339,473,1.516,474,1.516]],["body/index.html",[7,0.483,10,1.337,12,0.71,16,0.897,31,0.044,39,0.649,48,0.034,49,0.034,54,1.65,57,2.914,59,2,62,1.687,66,1.219,78,1.194,86,2.157,92,2.157,154,1.499,155,2.61,206,1.898,213,1.683,218,1.898,220,1.065,222,1.898,225,2.325,227,1.683,240,1.898,254,2.123,261,1.683,264,1.337,349,2.394,351,2.123,353,2.914,373,2.914,402,1.683,424,1.499,431,3.129,473,2.157,474,2.157,478,2.914,488,4.519,490,2.48,499,2.914,528,2.914,538,2.914,600,2.914,686,3.572,687,4.506,688,4.506,689,3.572,690,3.572,691,3.572,692,3.676,693,2.914,694,5.456,695,4.506,696,4.506,697,3.572,698,4.936,699,4.936,700,4.936,701,3.572,702,4.506,703,3.572,704,3.572,705,3.572,706,4.506,707,3.572,708,3.572,709,3.572,710,2.914,711,3.572,712,3.572,713,3.572,714,4.506,715,3.572,716,4.506,717,3.572,718,3.572,719,3.572,720,3.572,721,3.572,722,3.572,723,3.572,724,3.572,725,4.506,726,3.572,727,3.572,728,3.572,729,3.572,730,3.572,731,3.572,732,3.572]],["title/license.html",[473,1.516,474,1.516,733,1.744]],["body/license.html",[31,0.036,48,0.036,49,0.036,62,1.788,76,1.85,164,2.086,199,2.086,213,1.85,221,1.17,390,3.202,414,2.726,654,3.202,693,3.202,710,3.202,733,2.726,734,3.202,735,5.149,736,3.926,737,3.202,738,3.202,739,4.777,740,3.926,741,3.926,742,3.926,743,3.926,744,3.926,745,3.926,746,4.777,747,5.746,748,3.926,749,3.926,750,5.149,751,3.926,752,4.777,753,3.926,754,3.926,755,3.926,756,3.926,757,3.926,758,3.926,759,3.926,760,3.926,761,3.926,762,4.777,763,3.926,764,3.926,765,3.926,766,3.926,767,4.777,768,4.777,769,3.926,770,3.926,771,3.926,772,3.926,773,3.926,774,3.926,775,3.926,776,3.926,777,3.926,778,3.926,779,3.926,780,3.926,781,3.926,782,3.926,783,3.926,784,3.926,785,3.926,786,3.926,787,3.926,788,3.926,789,3.926,790,3.926,791,3.926,792,3.926,793,3.926,794,3.926,795,3.926]],["title/modules.html",[403,2.413]],["body/modules.html",[31,0.04,48,0.04,49,0.04,402,2.159,403,2.767,628,3.739,796,4.584,797,4.584,798,4.584]],["title/overview.html",[799,3.26]],["body/overview.html",[2,2.809,20,0.735,28,1.206,31,0.044,36,1.509,41,1.509,48,0.037,49,0.037,50,3.022,138,1.906,264,2.129,349,2.585,374,2.443,402,2.773,404,2.443,405,2.809,406,3.3,407,3.3,408,3.3,409,3.3,410,3.3,411,3.3,412,3.969,413,3.3,414,2.809,799,3.3,800,4.865,801,4.046,802,4.046,803,4.046]],["title/properties.html",[27,0.738,581,1.744]],["body/properties.html",[7,0.684,9,1.446,13,0.682,16,0.786,27,0.898,31,0.044,48,0.038,49,0.038,54,1.692,78,1.446,480,3.528,483,3.528,490,3.515,692,3.528,733,3.004,734,3.528,737,3.528,738,3.528,804,4.325,805,4.325,806,4.325,807,4.325,808,5.062,809,5.062,810,4.325,811,4.325,812,4.325,813,4.325]],["title/miscellaneous/typealiases.html",[680,0.94,814,3.558]],["body/miscellaneous/typealiases.html",[26,0.609,30,0.86,31,0.041,48,0.039,49,0.039,139,1.196,140,2.174,179,2.442,680,1.687,685,3.129,815,4.506,816,5.183]],["title/miscellaneous/variables.html",[680,0.94,817,2.902]],["body/miscellaneous/variables.html",[12,0.798,13,0.682,26,0.585,30,0.798,31,0.044,33,1.895,48,0.038,49,0.038,79,1.446,139,1.148,140,2.251,179,2.038,180,2.038,181,1.815,183,2.69,184,1.815,185,1.424,186,2.298,188,2.69,680,1.619,685,3.515,817,3.528]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":324,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["0.1.0",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["02d8d46",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["0502df0",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["0921257",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":800,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["10.0.0",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["10.0.1",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["10.x",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["11.0.0",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["11.x",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":483,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["12d5c74",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["13.x",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["14.x",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["15.x",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["16.x",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["17.x",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["18.0.0",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["18.x",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["193990a",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":802,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["2.6.2",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":654,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["2024",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["2164b97",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["2474ea5",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["264",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["2fa7cb0",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":801,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["34ddd5b",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":289,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["4.0.0",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["4667e53",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["4d258c6",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":803,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["5166464",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["5bad8ad",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["61c624b",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["630a53c",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["750d7ef",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["8.0.0",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["8.1.0",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["8.x",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["80edb78",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["8581814",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["86",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["8c50d05",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["9.x",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":213,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{},"license.html":{}}}],["abstractcontrol",{"_index":146,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ac16e33",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["accepts",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":214,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["action",{"_index":710,"title":{},"body":{"index.html":{},"license.html":{}}}],["actual_component",{"_index":462,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["add",{"_index":225,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{}}}],["added",{"_index":365,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["address",{"_index":695,"title":{},"body":{"index.html":{}}}],["adds",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["aec5b1d",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["aftercontentinit",{"_index":95,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["age",{"_index":696,"title":{},"body":{"index.html":{}}}],["alias",{"_index":430,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{}}}],["aliases",{"_index":815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["allowing",{"_index":52,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["allows",{"_index":600,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["alreadymettypes",{"_index":319,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["alreadymettypes.add(defaultdirective.type",{"_index":330,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["although",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":760,"title":{},"body":{"license.html":{}}}],["angular",{"_index":490,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["angular/common",{"_index":160,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"dependencies.html":{}}}],["angular/core/rxjs",{"_index":167,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["angular/forms",{"_index":152,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"dependencies.html":{}}}],["aot",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":717,"title":{},"body":{"index.html":{}}}],["applications",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["apply",{"_index":343,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["appropriate",{"_index":22,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{}}}],["arevalidationstatesequal",{"_index":684,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arevalidationstatesequal(previous",{"_index":190,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/functions.html":{}}}],["arising",{"_index":793,"title":{},"body":{"license.html":{}}}],["array",{"_index":32,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["associated",{"_index":199,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"license.html":{}}}],["author",{"_index":813,"title":{},"body":{"properties.html":{}}}],["authors",{"_index":784,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":364,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["b33bcff",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["b4f7312",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":376,"title":{},"body":{"injectables/ValdemortConfig.html":{},"changelog.html":{}}}],["basic",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":216,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["being",{"_index":206,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["beta.0",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["beta.1",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":704,"title":{},"body":{"index.html":{}}}],["birth",{"_index":208,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["body",{"_index":425,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["boolean",{"_index":187,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":374,"title":{},"body":{"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"changelog.html":{},"overview.html":{}}}],["breaking",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":798,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":796,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":807,"title":{},"body":{"properties.html":{}}}],["build",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":736,"title":{},"body":{"license.html":{}}}],["c2b739b",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["c5e4177",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":378,"title":{},"body":{"injectables/ValdemortConfig.html":{},"changelog.html":{}}}],["care",{"_index":689,"title":{},"body":{"index.html":{}}}],["case",{"_index":270,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["catch",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["champagne",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["change",{"_index":347,"title":{},"body":{"injectables/ValdemortConfig.html":{},"changelog.html":{}}}],["changedetection",{"_index":262,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["changedetectionstrategy",{"_index":142,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["changedetectionstrategy.onpush",{"_index":263,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["changelog",{"_index":475,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":743,"title":{},"body":{"license.html":{}}}],["check",{"_index":386,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["checks",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":230,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["chore",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":787,"title":{},"body":{"license.html":{}}}],["class",{"_index":47,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["classes",{"_index":227,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["cleaner",{"_index":688,"title":{},"body":{"index.html":{}}}],["cli",{"_index":499,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["closes",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["cluster_valdemortmodule",{"_index":409,"title":{},"body":{"modules/ValdemortModule.html":{},"overview.html":{}}}],["cluster_valdemortmodule_exports",{"_index":410,"title":{},"body":{"modules/ValdemortModule.html":{},"overview.html":{}}}],["cluster_valdemortmodule_imports",{"_index":411,"title":{},"body":{"modules/ValdemortModule.html":{},"overview.html":{}}}],["codelyzer",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":161,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["combinelatest([this.validationstatechanges.pipe(distinctuntilchanged(arevalidationstatesequal",{"_index":295,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["commit",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":344,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["compilation",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":20,"title":{"components/ValidationErrorsComponent.html":{}},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"overview.html":{}}}],["component_template",{"_index":458,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["components",{"_index":92,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"components/ValidationErrorsComponent.html":{},"changelog.html":{},"index.html":{}}}],["component‘s",{"_index":215,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["conditions",{"_index":766,"title":{},"body":{"license.html":{}}}],["config",{"_index":219,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["config.service",{"_index":156,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["config.service.ts",{"_index":341,"title":{},"body":{"injectables/ValdemortConfig.html":{},"miscellaneous/enumerations.html":{}}}],["config.service.ts:28",{"_index":355,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["config.service.ts:37",{"_index":372,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["config.service.ts:46",{"_index":359,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["config.service.ts:55",{"_index":375,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["config.service.ts:72",{"_index":381,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["config.shouldthrowonmissingcontrol",{"_index":397,"title":{},"body":{"injectables/ValdemortConfig.html":{},"changelog.html":{}}}],["configuration",{"_index":342,"title":{},"body":{"injectables/ValdemortConfig.html":{},"changelog.html":{}}}],["configure",{"_index":721,"title":{},"body":{"index.html":{}}}],["configured",{"_index":217,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["connection",{"_index":794,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":805,"title":{},"body":{"properties.html":{}}}],["const",{"_index":182,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["constructor(config",{"_index":445,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["constructor(defaultvalidationerrors",{"_index":106,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["constructor(private",{"_index":131,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["constructor(public",{"_index":432,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["constructor(templateref",{"_index":439,"title":{},"body":{"directives/ValidationErrorDirective.html":{},"directives/ValidationFallbackDirective.html":{}}}],["contained",{"_index":120,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["container",{"_index":274,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["containing",{"_index":267,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["content",{"_index":429,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{}}}],["contentchild",{"_index":125,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["contentchild(validationfallbackdirective",{"_index":123,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["contentchildren",{"_index":126,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["contentchildren(validationerrordirective",{"_index":116,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["contentinit",{"_index":284,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["context",{"_index":25,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["contract",{"_index":791,"title":{},"body":{"license.html":{}}}],["control",{"_index":79,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["control.touched",{"_index":400,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["controlcontainer",{"_index":147,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["controlname",{"_index":204,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["controls",{"_index":346,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["conversion",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["copies",{"_index":762,"title":{},"body":{"license.html":{}}}],["copy",{"_index":746,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":735,"title":{},"body":{"license.html":{}}}],["correct",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["css",{"_index":226,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["ctrl",{"_index":298,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ctrl.errors",{"_index":310,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ctrl.invalid",{"_index":313,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["current",{"_index":191,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/functions.html":{}}}],["current.control",{"_index":194,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["current.errors",{"_index":198,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["current.errorsdisplayed",{"_index":196,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["custom",{"_index":243,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["customdirectives",{"_index":331,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["customizing",{"_index":724,"title":{},"body":{"index.html":{}}}],["d16d844",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["da9a01d",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":788,"title":{},"body":{"license.html":{}}}],["date",{"_index":209,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["deal",{"_index":749,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":795,"title":{},"body":{"license.html":{}}}],["debug",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":406,"title":{},"body":{"modules/ValdemortModule.html":{},"overview.html":{}}}],["decorators",{"_index":115,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"components/ValidationErrorsComponent.html":{}}}],["default",{"_index":12,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultdirective",{"_index":329,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["defaultdirective.type",{"_index":327,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["defaultvalidationerrors",{"_index":1,"title":{"injectables/DefaultValidationErrors.html":{}},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["defaultvalidationerrorsdirective",{"_index":50,"title":{"directives/DefaultValidationErrorsDirective.html":{}},"body":{"directives/DefaultValidationErrorsDirective.html":{},"modules/ValdemortModule.html":{},"components/ValidationErrorsComponent.html":{},"overview.html":{}}}],["define",{"_index":351,"title":{},"body":{"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"index.html":{}}}],["defined",{"_index":34,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["defining",{"_index":246,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["demo",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":404,"title":{"dependencies.html":{}},"body":{"modules/ValdemortModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":9,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"properties.html":{}}}],["details",{"_index":223,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["dev",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["development",{"_index":396,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["dir.type",{"_index":326,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["directive",{"_index":14,"title":{"directives/DefaultValidationErrorsDirective.html":{},"directives/ValidationErrorDirective.html":{},"directives/ValidationFallbackDirective.html":{}},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["directives",{"_index":28,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"overview.html":{}}}],["directly",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["dirty",{"_index":231,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["disable",{"_index":172,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["disabled",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["disabling",{"_index":393,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["display",{"_index":89,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/enumerations.html":{}}}],["displayed",{"_index":229,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/enumerations.html":{}}}],["displaying",{"_index":466,"title":{},"body":{"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["displaymode",{"_index":153,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/enumerations.html":{}}}],["displaymode.all",{"_index":322,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["displays",{"_index":21,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["distinctuntilchanged",{"_index":162,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["distribute",{"_index":758,"title":{},"body":{"license.html":{}}}],["div",{"_index":371,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["doc",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["docheck",{"_index":143,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["documentation",{"_index":221,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"license.html":{}}}],["documented",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":253,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["dom",{"_index":443,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["each",{"_index":228,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["easily",{"_index":60,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"changelog.html":{}}}],["element",{"_index":122,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["email",{"_index":694,"title":{},"body":{"index.html":{}}}],["empty",{"_index":178,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["enable",{"_index":394,"title":{},"body":{"injectables/ValdemortConfig.html":{},"changelog.html":{}}}],["enabled",{"_index":387,"title":{},"body":{"injectables/ValdemortConfig.html":{},"changelog.html":{}}}],["enclosing",{"_index":202,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["encourage",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["engine",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["enjoy",{"_index":718,"title":{},"body":{"index.html":{}}}],["enum",{"_index":399,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["enumerations",{"_index":681,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment.production",{"_index":398,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["environment.production;5.0.0",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["environment.production;5.1.0",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["error",{"_index":16,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["error(`ngx",{"_index":333,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["error.directive",{"_index":42,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"modules/ValdemortModule.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["error.directive.ts",{"_index":420,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{}}}],["error.directive.ts:33",{"_index":440,"title":{},"body":{"directives/ValidationErrorDirective.html":{}}}],["error.directive.ts:35",{"_index":442,"title":{},"body":{"directives/ValidationErrorDirective.html":{}}}],["error.directive.ts:37",{"_index":441,"title":{},"body":{"directives/ValidationErrorDirective.html":{}}}],["error.max",{"_index":70,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["error.min",{"_index":702,"title":{},"body":{"index.html":{}}}],["errorclasses",{"_index":279,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["errordirectives",{"_index":101,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["errors",{"_index":13,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["errors'},{'name",{"_index":459,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component",{"_index":417,"title":{},"body":{"modules/ValdemortModule.html":{}}}],["errors.component.html",{"_index":257,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["errors.component.ts",{"_index":140,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["errors.component.ts:163",{"_index":447,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:171",{"_index":448,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:177",{"_index":449,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:183",{"_index":453,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:189",{"_index":455,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:191",{"_index":456,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:193",{"_index":454,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:194",{"_index":452,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:197",{"_index":446,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:232",{"_index":450,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.component.ts:236",{"_index":451,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["errors.directive",{"_index":418,"title":{},"body":{"modules/ValdemortModule.html":{}}}],["errors.directive.ts",{"_index":51,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["errors.directive.ts:53",{"_index":107,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["errors.directive.ts:61",{"_index":117,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["errors.directive.ts:67",{"_index":124,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["errors.directive.ts:69",{"_index":111,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["errors.service",{"_index":127,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["errors.service.ts",{"_index":8,"title":{},"body":{"injectables/DefaultValidationErrors.html":{}}}],["errors.service.ts:13",{"_index":35,"title":{},"body":{"injectables/DefaultValidationErrors.html":{}}}],["errors.service.ts:14",{"_index":38,"title":{},"body":{"injectables/DefaultValidationErrors.html":{}}}],["errorsclasses",{"_index":258,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["errorsdisplayed",{"_index":186,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/variables.html":{}}}],["errorstodisplay",{"_index":137,"title":{"interfaces/ErrorsToDisplay.html":{}},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["eslint",{"_index":171,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["eslint/no",{"_index":176,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["etc",{"_index":234,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["even",{"_index":703,"title":{},"body":{"index.html":{}}}],["event",{"_index":783,"title":{},"body":{"license.html":{}}}],["everywhere",{"_index":705,"title":{},"body":{"index.html":{}}}],["example",{"_index":66,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{}}}],["exist",{"_index":77,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["existing",{"_index":358,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["exists",{"_index":292,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["expect",{"_index":238,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["explicit",{"_index":177,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["export",{"_index":46,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["exports",{"_index":408,"title":{},"body":{"modules/ValdemortModule.html":{},"overview.html":{}}}],["exposed",{"_index":275,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["express",{"_index":774,"title":{},"body":{"license.html":{}}}],["expression",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["fallback",{"_index":29,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["fallback.directive",{"_index":43,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"modules/ValdemortModule.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["fallback.directive.ts",{"_index":464,"title":{},"body":{"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["fallback.directive.ts:37",{"_index":470,"title":{},"body":{"directives/ValidationFallbackDirective.html":{}}}],["fallback.directive.ts:38",{"_index":472,"title":{},"body":{"directives/ValidationFallbackDirective.html":{}}}],["fallback.directive.ts:40",{"_index":471,"title":{},"body":{"directives/ValidationFallbackDirective.html":{}}}],["fallbackdirective",{"_index":102,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["fallbackerror",{"_index":169,"title":{"interfaces/FallbackError.html":{}},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["fallbackerrors",{"_index":141,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["fallbackerrors.length",{"_index":325,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["false",{"_index":181,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["feedback",{"_index":373,"title":{},"body":{"injectables/ValdemortConfig.html":{},"index.html":{}}}],["feel",{"_index":722,"title":{},"body":{"index.html":{}}}],["field",{"_index":68,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["files",{"_index":748,"title":{},"body":{"license.html":{}}}],["filing",{"_index":728,"title":{},"body":{"index.html":{}}}],["finderrorstodisplay(ctrl",{"_index":317,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["fine",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":224,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["fitness",{"_index":779,"title":{},"body":{"license.html":{}}}],["fix",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":693,"title":{},"body":{"index.html":{},"license.html":{}}}],["force",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["forgotten",{"_index":465,"title":{},"body":{"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["form",{"_index":78,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["form.controls.age.geterror('min').min",{"_index":697,"title":{},"body":{"index.html":{}}}],["form.submitted",{"_index":401,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["formarray",{"_index":148,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["formcontrol",{"_index":265,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["formdirective",{"_index":306,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["formgroup",{"_index":266,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["formgroupdirective",{"_index":149,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["forms",{"_index":692,"title":{},"body":{"index.html":{},"properties.html":{}}}],["found",{"_index":334,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["framework",{"_index":369,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["free",{"_index":742,"title":{},"body":{"license.html":{}}}],["function",{"_index":189,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["functions",{"_index":683,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":765,"title":{},"body":{"license.html":{}}}],["further",{"_index":720,"title":{},"body":{"index.html":{}}}],["future",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":75,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["getting",{"_index":473,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["github",{"_index":732,"title":{},"body":{"index.html":{}}}],["given",{"_index":200,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/enumerations.html":{}}}],["gives",{"_index":686,"title":{},"body":{"index.html":{}}}],["giving",{"_index":395,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["global",{"_index":235,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["globally",{"_index":218,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["go",{"_index":719,"title":{},"body":{"index.html":{}}}],["good",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":741,"title":{},"body":{"license.html":{}}}],["group",{"_index":201,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["guaranteed",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["guidelines",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":84,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["handled",{"_index":80,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["happen",{"_index":383,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["hasdisplayableerror(ctrl",{"_index":336,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["hereby",{"_index":740,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":255,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["highlight",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":785,"title":{},"body":{"license.html":{}}}],["holding",{"_index":287,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["host",{"_index":128,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["html",{"_index":64,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"components/ValidationErrorsComponent.html":{}}}],["https://github.com/ninja",{"_index":808,"title":{},"body":{"properties.html":{}}}],["i.e",{"_index":119,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["i18n",{"_index":87,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["i18ned",{"_index":61,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["ignored",{"_index":269,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["implementation",{"_index":352,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["implements",{"_index":94,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["implicit",{"_index":421,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["implied",{"_index":775,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{}}}],["imports",{"_index":261,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"modules/ValdemortModule.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["improve",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":769,"title":{},"body":{"license.html":{}}}],["including",{"_index":752,"title":{},"body":{"license.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["information",{"_index":293,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["initialvalue",{"_index":302,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["inject",{"_index":348,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["injectable",{"_index":0,"title":{"injectables/DefaultValidationErrors.html":{},"injectables/ValdemortConfig.html":{}},"body":{"injectables/DefaultValidationErrors.html":{},"injectables/ValdemortConfig.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"injectables/ValdemortConfig.html":{},"overview.html":{}}}],["injected",{"_index":19,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["injecting",{"_index":723,"title":{},"body":{"index.html":{}}}],["input",{"_index":144,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["inputs",{"_index":438,"title":{},"body":{"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{}}}],["inside",{"_index":121,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["install",{"_index":715,"title":{},"body":{"index.html":{}}}],["installation",{"_index":713,"title":{},"body":{"index.html":{}}}],["instance",{"_index":286,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["instead",{"_index":203,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["integration",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":136,"title":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"interfaces/ValidationFallbackContext.html":{},"interfaces/ValidationState.html":{}},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["interfaces",{"_index":138,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"interfaces/ValidationFallbackContext.html":{},"interfaces/ValidationState.html":{},"overview.html":{}}}],["internationalized",{"_index":469,"title":{},"body":{"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["interop",{"_index":168,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["invalid",{"_index":211,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["issues",{"_index":725,"title":{},"body":{"index.html":{}}}],["it's",{"_index":55,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["itself",{"_index":205,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ivy",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":83,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["key",{"_index":88,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["keywords",{"_index":806,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":773,"title":{},"body":{"license.html":{}}}],["know",{"_index":291,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["label",{"_index":72,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["lastname'.as",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["learn",{"_index":709,"title":{},"body":{"index.html":{}}}],["legend",{"_index":405,"title":{},"body":{"modules/ValdemortModule.html":{},"components/ValidationErrorsComponent.html":{},"overview.html":{}}}],["less",{"_index":74,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["liability",{"_index":789,"title":{},"body":{"license.html":{}}}],["liable",{"_index":786,"title":{},"body":{"license.html":{}}}],["library",{"_index":382,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["license",{"_index":733,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limitation",{"_index":753,"title":{},"body":{"license.html":{}}}],["limited",{"_index":776,"title":{},"body":{"license.html":{}}}],["line",{"_index":174,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["list",{"_index":118,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["literal",{"_index":816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["look",{"_index":538,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["made",{"_index":385,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["make",{"_index":73,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"changelog.html":{}}}],["mandatory",{"_index":69,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["map",{"_index":163,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["map(([validationstate",{"_index":297,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["matching",{"_index":49,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["max",{"_index":210,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["meaning",{"_index":357,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["merchantability",{"_index":778,"title":{},"body":{"license.html":{}}}],["merge",{"_index":756,"title":{},"body":{"license.html":{}}}],["mergeddirectives",{"_index":318,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["mergeddirectives.length",{"_index":323,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["mergeddirectives.push(customdirectiveofsametype",{"_index":328,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["message",{"_index":90,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["messages",{"_index":54,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["metadata",{"_index":96,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"directives/ValidationFallbackDirective.html":{}}}],["methods",{"_index":103,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"directives/ValidationFallbackDirective.html":{}}}],["migrate",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":680,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":734,"title":{},"body":{"license.html":{},"properties.html":{}}}],["mode",{"_index":356,"title":{},"body":{"injectables/ValdemortConfig.html":{},"miscellaneous/enumerations.html":{}}}],["modify",{"_index":755,"title":{},"body":{"license.html":{}}}],["module",{"_index":349,"title":{"modules/ValdemortModule.html":{}},"body":{"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":403,"title":{"modules.html":{}},"body":{"modules/ValdemortModule.html":{},"changelog.html":{},"modules.html":{}}}],["more",{"_index":222,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["mutate",{"_index":350,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["name",{"_index":109,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["necessary",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":237,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["needed",{"_index":706,"title":{},"body":{"index.html":{}}}],["needs",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["never",{"_index":380,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["new",{"_index":283,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["next",{"_index":173,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["ng",{"_index":424,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"changelog.html":{},"index.html":{}}}],["ngaftercontentinit",{"_index":104,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ngcc",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["ngdocheck",{"_index":304,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ngfor",{"_index":157,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ngform",{"_index":150,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ngif",{"_index":158,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ngmodel",{"_index":708,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":416,"title":{},"body":{"modules/ValdemortModule.html":{}}}],["ngtemplatecontextguard",{"_index":437,"title":{},"body":{"directives/ValidationErrorDirective.html":{},"directives/ValidationFallbackDirective.html":{}}}],["ngtemplatecontextguard(directive",{"_index":434,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["ngtemplateoutlet",{"_index":159,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ngx",{"_index":488,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ninja",{"_index":737,"title":{},"body":{"license.html":{},"properties.html":{}}}],["no_errors",{"_index":183,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/variables.html":{}}}],["no_validation_state",{"_index":188,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":130,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["noninfringement",{"_index":782,"title":{},"body":{"license.html":{}}}],["notable",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":250,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["notice",{"_index":767,"title":{},"body":{"license.html":{}}}],["now",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":714,"title":{},"body":{"index.html":{}}}],["null",{"_index":185,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":71,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["object.keys(ctrl.errors).some",{"_index":337,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["obtaining",{"_index":745,"title":{},"body":{"license.html":{}}}],["old",{"_index":699,"title":{},"body":{"index.html":{}}}],["older",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["once",{"_index":57,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"index.html":{}}}],["one",{"_index":241,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/enumerations.html":{}}}],["ones",{"_index":244,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["onpush",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":110,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":288,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["ordered",{"_index":65,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["otherwise",{"_index":390,"title":{},"body":{"injectables/ValdemortConfig.html":{},"license.html":{}}}],["out",{"_index":414,"title":{},"body":{"modules/ValdemortModule.html":{},"license.html":{},"overview.html":{}}}],["override",{"_index":240,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["overrides",{"_index":251,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["overview",{"_index":799,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":581,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":712,"title":{},"body":{"index.html":{}}}],["param",{"_index":285,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"directives/ValidationFallbackDirective.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":273,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["partial",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":780,"title":{},"body":{"license.html":{}}}],["passed",{"_index":207,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["peer",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":739,"title":{},"body":{"license.html":{}}}],["permit",{"_index":763,"title":{},"body":{"license.html":{}}}],["person",{"_index":744,"title":{},"body":{"license.html":{}}}],["persons",{"_index":764,"title":{},"body":{"license.html":{}}}],["pipes",{"_index":63,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["place",{"_index":379,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["please",{"_index":727,"title":{},"body":{"index.html":{}}}],["portions",{"_index":771,"title":{},"body":{"license.html":{}}}],["present",{"_index":252,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["previous",{"_index":494,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["previous.control",{"_index":193,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["previous.errors",{"_index":197,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["previous.errorsdisplayed",{"_index":195,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["prism",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":281,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["production",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":478,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["properties",{"_index":27,"title":{"properties.html":{}},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"properties.html":{}}}],["provide",{"_index":353,"title":{},"body":{"injectables/ValdemortConfig.html":{},"index.html":{}}}],["provided",{"_index":76,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"license.html":{}}}],["providedin",{"_index":44,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"injectables/ValdemortConfig.html":{}}}],["providers",{"_index":407,"title":{},"body":{"modules/ValdemortModule.html":{},"overview.html":{}}}],["provides",{"_index":24,"title":{},"body":{"injectables/DefaultValidationErrors.html":{}}}],["public",{"_index":436,"title":{},"body":{"directives/ValidationErrorDirective.html":{},"directives/ValidationFallbackDirective.html":{}}}],["publish",{"_index":757,"title":{},"body":{"license.html":{}}}],["published",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":730,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":781,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":114,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["questions",{"_index":726,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":276,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["reference",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["references",{"_index":18,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{}}}],["register",{"_index":53,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["release",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["relying",{"_index":468,"title":{},"body":{"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["remove",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["renovate",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":811,"title":{},"body":{"properties.html":{}}}],["requests",{"_index":731,"title":{},"body":{"index.html":{}}}],["required",{"_index":431,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"changelog.html":{},"index.html":{}}}],["reset",{"_index":413,"title":{},"body":{"modules/ValdemortModule.html":{},"overview.html":{}}}],["restriction",{"_index":751,"title":{},"body":{"license.html":{}}}],["results",{"_index":48,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":192,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["returns",{"_index":112,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"injectables/ValdemortConfig.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"directives/ValidationFallbackDirective.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":367,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["reused",{"_index":93,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["rights",{"_index":754,"title":{},"body":{"license.html":{}}}],["root",{"_index":45,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"injectables/ValdemortConfig.html":{}}}],["rule",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["rules",{"_index":345,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["run",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":165,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["same",{"_index":85,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["see",{"_index":220,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{}}}],["selector",{"_index":97,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["sell",{"_index":761,"title":{},"body":{"license.html":{}}}],["separated",{"_index":361,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["service",{"_index":10,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["set",{"_index":268,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["several",{"_index":242,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["shall",{"_index":768,"title":{},"body":{"license.html":{}}}],["shouldcontinue",{"_index":320,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["shoulddisplayerrors",{"_index":180,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/variables.html":{}}}],["shoulddisplayerrors(ctrl",{"_index":312,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["shouldthrowonmissingcontrol",{"_index":354,"title":{},"body":{"injectables/ValdemortConfig.html":{},"changelog.html":{}}}],["shown",{"_index":212,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["signal",{"_index":145,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["signature",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["silently",{"_index":391,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["simple",{"_index":804,"title":{},"body":{"properties.html":{}}}],["simpler",{"_index":687,"title":{},"body":{"index.html":{}}}],["simply",{"_index":245,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["situations",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":747,"title":{},"body":{"license.html":{}}}],["sorry",{"_index":249,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["space",{"_index":363,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["specific",{"_index":81,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["specified",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["specifies",{"_index":360,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["squad",{"_index":738,"title":{},"body":{"license.html":{},"properties.html":{}}}],["squad/ngx",{"_index":809,"title":{},"body":{"properties.html":{}}}],["src/.../valdemort",{"_index":682,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validation",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/default",{"_index":6,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{}}}],["src/lib/valdemort",{"_index":340,"title":{},"body":{"injectables/ValdemortConfig.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/valdemort.module.ts",{"_index":415,"title":{},"body":{"modules/ValdemortModule.html":{}}}],["src/lib/validation",{"_index":139,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ssg",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["ssr",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["standalone",{"_index":99,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["standard",{"_index":368,"title":{},"body":{"injectables/ValdemortConfig.html":{},"changelog.html":{}}}],["started",{"_index":474,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":377,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["static",{"_index":433,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["stick",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":528,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["store",{"_index":15,"title":{},"body":{"injectables/DefaultValidationErrors.html":{}}}],["stores",{"_index":91,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["strict",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":170,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["structural",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["style",{"_index":129,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["style.display",{"_index":259,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["styling",{"_index":370,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["subject",{"_index":164,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"license.html":{}}}],["sublicense",{"_index":759,"title":{},"body":{"license.html":{}}}],["submit",{"_index":700,"title":{},"body":{"index.html":{}}}],["submitted",{"_index":233,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["submitting",{"_index":729,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":770,"title":{},"body":{"license.html":{}}}],["such",{"_index":389,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["sufficient",{"_index":236,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["support",{"_index":628,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["supposed",{"_index":56,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["svg",{"_index":797,"title":{},"body":{"modules.html":{}}}],["targets",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":17,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["template[valerror",{"_index":428,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{}}}],["template[valerror]'},{'name",{"_index":460,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["template[valfallback",{"_index":461,"title":{},"body":{"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["templateref",{"_index":422,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["templates",{"_index":23,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["templateurl",{"_index":256,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["tested",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["this.config.displaymode",{"_index":321,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.config.errorclasses",{"_index":280,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.config.errorsclasses",{"_index":278,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.config.shoulddisplayerrors(ctrl",{"_index":308,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.contentinit.next",{"_index":303,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.contentinit]).pipe",{"_index":296,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.controlcontainer",{"_index":315,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.controlcontainer.formdirective",{"_index":316,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.controlcontainer?.formdirective",{"_index":307,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.controlname",{"_index":335,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.defaultvalidationerrors.directives",{"_index":132,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["this.defaultvalidationerrors.directives.some(dir",{"_index":338,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.defaultvalidationerrors.fallback",{"_index":134,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.errordirectives.some(dir",{"_index":339,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.errordirectives.toarray",{"_index":133,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.fallbackdirective",{"_index":135,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.findactualcontrol",{"_index":305,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.finderrorstodisplay(ctrl",{"_index":301,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.hasdisplayableerror(ctrl",{"_index":314,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.shoulddisplayerrors(ctrl",{"_index":300,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.validationstatechanges.next",{"_index":309,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.validationstatechanges.next(no_validation_state",{"_index":311,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["this.vm",{"_index":294,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["though",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":332,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["throwing",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["thrown",{"_index":388,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["thus",{"_index":392,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["tiny",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":792,"title":{},"body":{"license.html":{}}}],["tosignal",{"_index":166,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["touched",{"_index":232,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["tree",{"_index":444,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["true",{"_index":100,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["tsconfig",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":426,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["type",{"_index":30,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":814,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":467,"title":{},"body":{"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["typescript",{"_index":175,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{}}}],["typically",{"_index":58,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{}}}],["typing",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["typo",{"_index":384,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["undefined",{"_index":37,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["unhandled",{"_index":82,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["unknown",{"_index":435,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["update",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["usable",{"_index":271,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["usage",{"_index":67,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["usages",{"_index":427,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["use",{"_index":62,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":11,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["useful",{"_index":366,"title":{},"body":{"injectables/ValdemortConfig.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["using",{"_index":59,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["v10",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["v11",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["v13",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["v7.4",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["v9.0.0",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":98,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["valdemort",{"_index":155,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"index.html":{}}}],["valdemort.git",{"_index":812,"title":{},"body":{"properties.html":{}}}],["valdemort/issues",{"_index":810,"title":{},"body":{"properties.html":{}}}],["valdemortconfig",{"_index":154,"title":{"injectables/ValdemortConfig.html":{}},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["valdemortmodule",{"_index":402,"title":{"modules/ValdemortModule.html":{}},"body":{"modules/ValdemortModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["valerror",{"_index":423,"title":{},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"changelog.html":{}}}],["valfallback",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":254,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{}}}],["validate",{"_index":272,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["validation",{"_index":7,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"properties.html":{}}}],["validationerrorcontext",{"_index":419,"title":{"interfaces/ValidationErrorContext.html":{}},"body":{"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{}}}],["validationerrordirective",{"_index":41,"title":{"directives/ValidationErrorDirective.html":{}},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"modules/ValdemortModule.html":{},"interfaces/ValidationErrorContext.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"overview.html":{}}}],["validationerrors",{"_index":151,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["validationerrorscomponent",{"_index":264,"title":{"components/ValidationErrorsComponent.html":{}},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"modules/ValdemortModule.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"index.html":{},"overview.html":{}}}],["validationfallbackcontext",{"_index":463,"title":{"interfaces/ValidationFallbackContext.html":{}},"body":{"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{}}}],["validationfallbackdirective",{"_index":36,"title":{"directives/ValidationFallbackDirective.html":{}},"body":{"injectables/DefaultValidationErrors.html":{},"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"modules/ValdemortModule.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"interfaces/ValidationState.html":{},"overview.html":{}}}],["validationstate",{"_index":184,"title":{"interfaces/ValidationState.html":{}},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validationstate.control",{"_index":299,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["validationstatechanges",{"_index":282,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["value",{"_index":33,"title":{},"body":{"injectables/DefaultValidationErrors.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"injectables/ValdemortConfig.html":{},"directives/ValidationErrorDirective.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":457,"title":{},"body":{"components/ValidationErrorsComponent.html":{}}}],["variables",{"_index":817,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":480,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["versions",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["viewmodel",{"_index":179,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["vm",{"_index":277,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["vm().shoulddisplayerrors",{"_index":260,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["void",{"_index":113,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["want",{"_index":239,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{},"changelog.html":{}}}],["warranties",{"_index":777,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":772,"title":{},"body":{"license.html":{}}}],["way",{"_index":86,"title":{},"body":{"directives/DefaultValidationErrorsDirective.html":{},"interfaces/ValidationFallbackContext.html":{},"directives/ValidationFallbackDirective.html":{},"index.html":{}}}],["web",{"_index":711,"title":{},"body":{"index.html":{}}}],["whether",{"_index":790,"title":{},"body":{"license.html":{}}}],["white",{"_index":362,"title":{},"body":{"injectables/ValdemortConfig.html":{}}}],["without",{"_index":750,"title":{},"body":{"license.html":{}}}],["works",{"_index":707,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":290,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["writing",{"_index":701,"title":{},"body":{"index.html":{}}}],["written",{"_index":691,"title":{},"body":{"index.html":{}}}],["wrongly",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["yarn",{"_index":716,"title":{},"body":{"index.html":{}}}],["years",{"_index":698,"title":{},"body":{"index.html":{}}}],["you're",{"_index":247,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["you've",{"_index":690,"title":{},"body":{"index.html":{}}}],["young",{"_index":248,"title":{},"body":{"interfaces/ErrorsToDisplay.html":{},"interfaces/FallbackError.html":{},"components/ValidationErrorsComponent.html":{},"interfaces/ValidationState.html":{}}}],["zoom",{"_index":412,"title":{},"body":{"modules/ValdemortModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/DefaultValidationErrors.html":{"url":"injectables/DefaultValidationErrors.html","title":"injectable - DefaultValidationErrors","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DefaultValidationErrors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/default-validation-errors.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service used by the default validation errors directive to store the default error template references. This\nservice is injected in the validation errors component which displays the appropriate templates and provides their context.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                directives\n                            \n                            \n                                fallback\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        directives\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/lib/default-validation-errors.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationFallbackDirective | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/default-validation-errors.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ValidationErrorDirective } from './validation-error.directive';\nimport { ValidationFallbackDirective } from './validation-fallback.directive';\n\n/**\n * Service used by the default validation errors directive to store the default error template references. This\n * service is injected in the validation errors component which displays the appropriate templates and provides their context.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultValidationErrors {\n  directives: Array = [];\n  fallback: ValidationFallbackDirective | undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DefaultValidationErrorsDirective.html":{"url":"directives/DefaultValidationErrorsDirective.html","title":"directive - DefaultValidationErrorsDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DefaultValidationErrorsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/default-validation-errors.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive allowing to register default templates for validation error messages. It's supposed to be used once,\ntypically in the root component. By using templates to do that, error messages can\n\neasily be i18ned\neasily use pipes\neasily use HTML\neasily be ordered\n\nExample usage:\nExample :  \n    This field is mandatory\n    This field must be at most {{ error.max | number }}\n  Example usage where a label is used to make the messages less generic:\nExample :  \n    {{ label }} is mandatory\n    {{ label }} must be at most {{ error.max | number }}\n  A fallback template can also be provided. This fallback template is used for all the errors that exist on the form control\nbut are not handled by any of the specific error templates:\nExample :  \n    {{ label }} is mandatory\n    {{ label }} must be at most {{ error.max | number }}\n    {{ label }} has an unhandled error of type {{ type }}: {{ error | json }}\n  Using the fallback can also be used to handle all the errors the same way, for example by using the error type as an i18n key\nto display the appropriate error message.\nThis directive stores the default template references in a service, that is then injected in the validation errors components\nto be reused.\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        val-default-errors\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                errorDirectives\n                            \n                            \n                                    \n                                fallbackDirective\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultValidationErrors: DefaultValidationErrors)\n                    \n                \n                        \n                            \n                                Defined in src/lib/default-validation-errors.directive.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultValidationErrors\n                                                  \n                                                        \n                                                                        DefaultValidationErrors\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/default-validation-errors.directive.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        errorDirectives\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ValidationErrorDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/default-validation-errors.directive.ts:61\n                        \n                    \n\n            \n                \n                    The list of validation error directives (i.e. )\ncontained inside the directive element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fallbackDirective\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationFallbackDirective | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(ValidationFallbackDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/default-validation-errors.directive.ts:67\n                        \n                    \n\n            \n                \n                    The validation fallback directive (i.e. ) contained inside the directive element.\n\n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterContentInit, ContentChild, ContentChildren, Directive, QueryList } from '@angular/core';\nimport { DefaultValidationErrors } from './default-validation-errors.service';\nimport { ValidationErrorDirective } from './validation-error.directive';\nimport { ValidationFallbackDirective } from './validation-fallback.directive';\n\n/**\n * Directive allowing to register default templates for validation error messages. It's supposed to be used once,\n * typically in the root component. By using templates to do that, error messages can\n * - easily be i18ned\n * - easily use pipes\n * - easily use HTML\n * - easily be ordered\n *\n * Example usage:\n * ```\n *   \n *     This field is mandatory\n *     This field must be at most {{ error.max | number }}\n *   \n * ```\n *\n * Example usage where a label is used to make the messages less generic:\n * ```\n *   \n *     {{ label }} is mandatory\n *     {{ label }} must be at most {{ error.max | number }}\n *   \n * ```\n *\n * A fallback template can also be provided. This fallback template is used for all the errors that exist on the form control\n * but are not handled by any of the specific error templates:\n * ```\n *   \n *     {{ label }} is mandatory\n *     {{ label }} must be at most {{ error.max | number }}\n *     {{ label }} has an unhandled error of type {{ type }}: {{ error | json }}\n *   \n * ```\n * Using the fallback can also be used to handle all the errors the same way, for example by using the error type as an i18n key\n * to display the appropriate error message.\n *\n * This directive stores the default template references in a service, that is then injected in the validation errors components\n * to be reused.\n */\n@Directive({\n  selector: 'val-default-errors',\n  host: {\n    style: 'display: none'\n  },\n  standalone: true\n})\nexport class DefaultValidationErrorsDirective implements AfterContentInit {\n  constructor(private defaultValidationErrors: DefaultValidationErrors) {}\n\n  /**\n   * The list of validation error directives (i.e. )\n   * contained inside the directive element.\n   */\n  @ContentChildren(ValidationErrorDirective)\n  errorDirectives!: QueryList;\n\n  /**\n   * The validation fallback directive (i.e. ) contained inside the directive element.\n   */\n  @ContentChild(ValidationFallbackDirective)\n  fallbackDirective: ValidationFallbackDirective | undefined;\n\n  ngAfterContentInit(): void {\n    this.defaultValidationErrors.directives = this.errorDirectives.toArray();\n    this.defaultValidationErrors.fallback = this.fallbackDirective;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorsToDisplay.html":{"url":"interfaces/ErrorsToDisplay.html","title":"interface - ErrorsToDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorsToDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/validation-errors.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            fallback\n                                        \n                                \n                                \n                                        \n                                            fallbackErrors\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fallback:         ValidationFallbackDirective | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ValidationFallbackDirective | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fallbackErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fallbackErrors:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  DoCheck,\n  Input,\n  Optional,\n  QueryList,\n  Signal\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormArray, FormGroupDirective, NgForm, ValidationErrors } from '@angular/forms';\nimport { DisplayMode, ValdemortConfig } from './valdemort-config.service';\nimport { DefaultValidationErrors } from './default-validation-errors.service';\nimport { ValidationErrorDirective } from './validation-error.directive';\nimport { ValidationFallbackDirective } from './validation-fallback.directive';\nimport { NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { combineLatest, distinctUntilChanged, map, Subject } from 'rxjs';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\ninterface FallbackError {\n  type: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any;\n}\n\ninterface ErrorsToDisplay {\n  // The validation error directives to display\n  errors: Array;\n\n  // The fallback directive to use to display the fallback errors\n  fallback: ValidationFallbackDirective | undefined;\n\n  // the fallback errors to display (empty if there is no fallback directive)\n  fallbackErrors: Array;\n}\n\ntype ViewModel =\n  | {\n      shouldDisplayErrors: false;\n    }\n  | {\n      shouldDisplayErrors: true;\n      errorsToDisplay: ErrorsToDisplay;\n      control: AbstractControl;\n    };\n\nconst NO_ERRORS: ViewModel = {\n  shouldDisplayErrors: false\n};\n\ninterface ValidationState {\n  control: AbstractControl | null;\n  errorsDisplayed: boolean | null;\n  errors: ValidationErrors | null;\n}\n\nconst NO_VALIDATION_STATE: ValidationState = {\n  control: null,\n  errorsDisplayed: null,\n  errors: null\n};\n\nfunction areValidationStatesEqual(previous: ValidationState, current: ValidationState): boolean {\n  return previous.control === current.control && previous.errorsDisplayed === current.errorsDisplayed && previous.errors === current.errors;\n}\n\n/**\n * Component allowing to display validation error messages associated to a given form control, form group or form array.\n * The control is provided using the `control` input of the component. If it's used inside an enclosing form group or\n * form array, it can instead be provided using the `controlName` input of the component.\n *\n * Example usage where the control itself is being passed as input:\n * ```\n *   \n *     The birth date is mandatory\n *     The max value for the birth date is {{ error.max | number }}\n *   \n * ```\n *\n * Example usage where the control name is being passed as input:\n * ```\n *   \n *     The birth date is mandatory\n *     The max value for the birth date is {{ error.max | number }}\n *   \n * ```\n *\n * This component, if the control is invalid, displays its validation errors using the provided templates.\n * The templates, as shown in the above example, have access to the validation error itself.\n *\n * The label of the control can also be provided as input, and then used in the templates:\n * ```\n *   \n *     {{ label }} is mandatory\n *     The max value for {{ label }} is {{ error.max | number }}\n *   \n * ```\n *\n * The component‘s behavior is configured globally by the Config service (see its documentation for more details). It can\n * - display the first error, or all the errors\n * - add CSS classes to its host `` element\n * - add CSS classes to each error message element being displayed\n * - choose when to display the errors (dirty, touched, touched and submitted, etc.)\n *\n * Global, default templates can be defined (and used by this component) using the default validation errors directive\n * (see its documentation for details). So, if the default error messages are defined and sufficient for a given control, all you\n * need is\n *\n * ```\n * \n * ```\n *\n * or, if the default templates expect a label:\n *\n * ```\n * \n * ```\n *\n * If, however, you want to override one or several error messages by custom ones, you can do so by simply defining them inside the\n * component:\n *\n * ```\n * \n *   You're too young, sorry\n * \n * ```\n *\n * A fallback template can also be provided. This fallback template is used for all the errors that exist on the form control\n * but are not handled by any of the specific error templates:\n * ```\n * \n *   You're too young, sorry\n *   {{ label }} has an unhandled error of type {{ type }}: {{ error | json }}\n * \n * ```\n * Note that, the fallback template can also be defined in the default validation errors directive (see its documentation for details).\n * If a fallback template is defined inside `val-errors`, it overrides the default fallback.\n *\n * If an error is present on the control, but doesn't have any template, default template or fallback template defined for its type,\n * then it's not displayed. If the control is valid, or if none of the errors of the component has a matching template or default template,\n * then this component itself is hidden.\n */\n@Component({\n  selector: 'val-errors',\n  templateUrl: './validation-errors.component.html',\n  host: {\n    '[class]': 'errorsClasses',\n    '[style.display]': `vm().shouldDisplayErrors ? '' : 'none'`\n  },\n  standalone: true,\n  imports: [NgIf, NgFor, NgTemplateOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValidationErrorsComponent implements AfterContentInit, DoCheck {\n  /**\n   * The FormControl, FormGroup or FormArray containing the validation errors.\n   * If set, the controlName input is ignored\n   */\n  @Input()\n  control: AbstractControl | null = null;\n\n  /**\n   * The name (or the index, in case it's contained in a FormArray) of the FormControl, FormGroup or FormArray containing the validation\n   * errors.\n   * Ignored if the control input is set, and only usable if the control to validate is part of a control container\n   */\n  @Input()\n  controlName: string | number | null = null;\n\n  /**\n   * The label of the field, exposed to templates so they can use it in the error message.\n   */\n  @Input()\n  label: string | null = null;\n\n  /**\n   * The list of validation error directives (i.e. ) contained inside the component element.\n   */\n  @ContentChildren(ValidationErrorDirective)\n  errorDirectives!: QueryList;\n\n  /**\n   * The validation fallback directive (i.e. ) contained inside the component element.\n   */\n  @ContentChild(ValidationFallbackDirective)\n  fallbackDirective: ValidationFallbackDirective | undefined;\n\n  readonly vm: Signal;\n\n  readonly errorsClasses = this.config.errorsClasses || '';\n  readonly errorClasses = this.config.errorClasses || '';\n\n  private validationStateChanges = new Subject();\n  private contentInit = new Subject();\n\n  /**\n   * @param config the Config service instance, defining the behavior of this component\n   * @param defaultValidationErrors the service holding the default error templates, optionally\n   * defined by using the default validation errors directive\n   * @param controlContainer one of the 4 form group or form array directives that can \"wrap\" the control.\n   * It's injected so that we can know if it exists and, if it does, if its form directive has been submitted or not:\n   * the config service shouldDisplayErrors function can choose (and does by default) to use that information.\n   */\n  constructor(\n    private config: ValdemortConfig,\n    private defaultValidationErrors: DefaultValidationErrors,\n    @Optional() private controlContainer: ControlContainer\n  ) {\n    this.vm = toSignal(\n      combineLatest([this.validationStateChanges.pipe(distinctUntilChanged(areValidationStatesEqual)), this.contentInit]).pipe(\n        map(([validationState]) => {\n          const ctrl = validationState.control;\n          if (this.shouldDisplayErrors(ctrl)) {\n            const errorsToDisplay = this.findErrorsToDisplay(ctrl);\n            return {\n              shouldDisplayErrors: true,\n              control: ctrl,\n              errorsToDisplay\n            };\n          } else {\n            return NO_ERRORS;\n          }\n        })\n      ),\n      { initialValue: NO_ERRORS }\n    );\n  }\n\n  ngAfterContentInit(): void {\n    this.contentInit.next();\n  }\n\n  ngDoCheck(): void {\n    const ctrl = this.findActualControl();\n    if (ctrl) {\n      const formDirective = this.controlContainer?.formDirective as NgForm | FormGroupDirective | undefined;\n      const errorsDisplayed = this.config.shouldDisplayErrors(ctrl, formDirective);\n      this.validationStateChanges.next({\n        control: ctrl,\n        errorsDisplayed,\n        errors: ctrl.errors\n      });\n    } else {\n      this.validationStateChanges.next(NO_VALIDATION_STATE);\n    }\n  }\n\n  private shouldDisplayErrors(ctrl: AbstractControl | null): ctrl is AbstractControl {\n    if (!ctrl || !ctrl.invalid || !this.hasDisplayableError(ctrl)) {\n      return false;\n    }\n    const form = this.controlContainer && (this.controlContainer.formDirective as NgForm | FormGroupDirective);\n    return this.config.shouldDisplayErrors(ctrl, form);\n  }\n\n  private findErrorsToDisplay(ctrl: AbstractControl): ErrorsToDisplay {\n    const mergedDirectives: Array = [];\n    const fallbackErrors: Array = [];\n    const alreadyMetTypes = new Set();\n    const shouldContinue = () =>\n      this.config.displayMode === DisplayMode.ALL || (mergedDirectives.length === 0 && fallbackErrors.length === 0);\n    for (let i = 0; i  dir.type === defaultDirective.type);\n        mergedDirectives.push(customDirectiveOfSameType || defaultDirective);\n      }\n      alreadyMetTypes.add(defaultDirective.type);\n    }\n\n    if (shouldContinue()) {\n      const customDirectives = this.errorDirectives.toArray();\n      for (let i = 0; i  0) {\n          throw new Error(`ngx-valdemort: no control found for controlName: '${this.controlName}'.`);\n        }\n      }\n      return control;\n    }\n    return null;\n  }\n\n  private hasDisplayableError(ctrl: AbstractControl) {\n    return (\n      ctrl.errors &&\n      (this.fallbackDirective ||\n        this.defaultValidationErrors.fallback ||\n        Object.keys(ctrl.errors).some(\n          type =>\n            this.defaultValidationErrors.directives.some(dir => dir.type === type) || this.errorDirectives.some(dir => dir.type === type)\n        ))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FallbackError.html":{"url":"interfaces/FallbackError.html","title":"interface - FallbackError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FallbackError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/validation-errors.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  DoCheck,\n  Input,\n  Optional,\n  QueryList,\n  Signal\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormArray, FormGroupDirective, NgForm, ValidationErrors } from '@angular/forms';\nimport { DisplayMode, ValdemortConfig } from './valdemort-config.service';\nimport { DefaultValidationErrors } from './default-validation-errors.service';\nimport { ValidationErrorDirective } from './validation-error.directive';\nimport { ValidationFallbackDirective } from './validation-fallback.directive';\nimport { NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { combineLatest, distinctUntilChanged, map, Subject } from 'rxjs';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\ninterface FallbackError {\n  type: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any;\n}\n\ninterface ErrorsToDisplay {\n  // The validation error directives to display\n  errors: Array;\n\n  // The fallback directive to use to display the fallback errors\n  fallback: ValidationFallbackDirective | undefined;\n\n  // the fallback errors to display (empty if there is no fallback directive)\n  fallbackErrors: Array;\n}\n\ntype ViewModel =\n  | {\n      shouldDisplayErrors: false;\n    }\n  | {\n      shouldDisplayErrors: true;\n      errorsToDisplay: ErrorsToDisplay;\n      control: AbstractControl;\n    };\n\nconst NO_ERRORS: ViewModel = {\n  shouldDisplayErrors: false\n};\n\ninterface ValidationState {\n  control: AbstractControl | null;\n  errorsDisplayed: boolean | null;\n  errors: ValidationErrors | null;\n}\n\nconst NO_VALIDATION_STATE: ValidationState = {\n  control: null,\n  errorsDisplayed: null,\n  errors: null\n};\n\nfunction areValidationStatesEqual(previous: ValidationState, current: ValidationState): boolean {\n  return previous.control === current.control && previous.errorsDisplayed === current.errorsDisplayed && previous.errors === current.errors;\n}\n\n/**\n * Component allowing to display validation error messages associated to a given form control, form group or form array.\n * The control is provided using the `control` input of the component. If it's used inside an enclosing form group or\n * form array, it can instead be provided using the `controlName` input of the component.\n *\n * Example usage where the control itself is being passed as input:\n * ```\n *   \n *     The birth date is mandatory\n *     The max value for the birth date is {{ error.max | number }}\n *   \n * ```\n *\n * Example usage where the control name is being passed as input:\n * ```\n *   \n *     The birth date is mandatory\n *     The max value for the birth date is {{ error.max | number }}\n *   \n * ```\n *\n * This component, if the control is invalid, displays its validation errors using the provided templates.\n * The templates, as shown in the above example, have access to the validation error itself.\n *\n * The label of the control can also be provided as input, and then used in the templates:\n * ```\n *   \n *     {{ label }} is mandatory\n *     The max value for {{ label }} is {{ error.max | number }}\n *   \n * ```\n *\n * The component‘s behavior is configured globally by the Config service (see its documentation for more details). It can\n * - display the first error, or all the errors\n * - add CSS classes to its host `` element\n * - add CSS classes to each error message element being displayed\n * - choose when to display the errors (dirty, touched, touched and submitted, etc.)\n *\n * Global, default templates can be defined (and used by this component) using the default validation errors directive\n * (see its documentation for details). So, if the default error messages are defined and sufficient for a given control, all you\n * need is\n *\n * ```\n * \n * ```\n *\n * or, if the default templates expect a label:\n *\n * ```\n * \n * ```\n *\n * If, however, you want to override one or several error messages by custom ones, you can do so by simply defining them inside the\n * component:\n *\n * ```\n * \n *   You're too young, sorry\n * \n * ```\n *\n * A fallback template can also be provided. This fallback template is used for all the errors that exist on the form control\n * but are not handled by any of the specific error templates:\n * ```\n * \n *   You're too young, sorry\n *   {{ label }} has an unhandled error of type {{ type }}: {{ error | json }}\n * \n * ```\n * Note that, the fallback template can also be defined in the default validation errors directive (see its documentation for details).\n * If a fallback template is defined inside `val-errors`, it overrides the default fallback.\n *\n * If an error is present on the control, but doesn't have any template, default template or fallback template defined for its type,\n * then it's not displayed. If the control is valid, or if none of the errors of the component has a matching template or default template,\n * then this component itself is hidden.\n */\n@Component({\n  selector: 'val-errors',\n  templateUrl: './validation-errors.component.html',\n  host: {\n    '[class]': 'errorsClasses',\n    '[style.display]': `vm().shouldDisplayErrors ? '' : 'none'`\n  },\n  standalone: true,\n  imports: [NgIf, NgFor, NgTemplateOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValidationErrorsComponent implements AfterContentInit, DoCheck {\n  /**\n   * The FormControl, FormGroup or FormArray containing the validation errors.\n   * If set, the controlName input is ignored\n   */\n  @Input()\n  control: AbstractControl | null = null;\n\n  /**\n   * The name (or the index, in case it's contained in a FormArray) of the FormControl, FormGroup or FormArray containing the validation\n   * errors.\n   * Ignored if the control input is set, and only usable if the control to validate is part of a control container\n   */\n  @Input()\n  controlName: string | number | null = null;\n\n  /**\n   * The label of the field, exposed to templates so they can use it in the error message.\n   */\n  @Input()\n  label: string | null = null;\n\n  /**\n   * The list of validation error directives (i.e. ) contained inside the component element.\n   */\n  @ContentChildren(ValidationErrorDirective)\n  errorDirectives!: QueryList;\n\n  /**\n   * The validation fallback directive (i.e. ) contained inside the component element.\n   */\n  @ContentChild(ValidationFallbackDirective)\n  fallbackDirective: ValidationFallbackDirective | undefined;\n\n  readonly vm: Signal;\n\n  readonly errorsClasses = this.config.errorsClasses || '';\n  readonly errorClasses = this.config.errorClasses || '';\n\n  private validationStateChanges = new Subject();\n  private contentInit = new Subject();\n\n  /**\n   * @param config the Config service instance, defining the behavior of this component\n   * @param defaultValidationErrors the service holding the default error templates, optionally\n   * defined by using the default validation errors directive\n   * @param controlContainer one of the 4 form group or form array directives that can \"wrap\" the control.\n   * It's injected so that we can know if it exists and, if it does, if its form directive has been submitted or not:\n   * the config service shouldDisplayErrors function can choose (and does by default) to use that information.\n   */\n  constructor(\n    private config: ValdemortConfig,\n    private defaultValidationErrors: DefaultValidationErrors,\n    @Optional() private controlContainer: ControlContainer\n  ) {\n    this.vm = toSignal(\n      combineLatest([this.validationStateChanges.pipe(distinctUntilChanged(areValidationStatesEqual)), this.contentInit]).pipe(\n        map(([validationState]) => {\n          const ctrl = validationState.control;\n          if (this.shouldDisplayErrors(ctrl)) {\n            const errorsToDisplay = this.findErrorsToDisplay(ctrl);\n            return {\n              shouldDisplayErrors: true,\n              control: ctrl,\n              errorsToDisplay\n            };\n          } else {\n            return NO_ERRORS;\n          }\n        })\n      ),\n      { initialValue: NO_ERRORS }\n    );\n  }\n\n  ngAfterContentInit(): void {\n    this.contentInit.next();\n  }\n\n  ngDoCheck(): void {\n    const ctrl = this.findActualControl();\n    if (ctrl) {\n      const formDirective = this.controlContainer?.formDirective as NgForm | FormGroupDirective | undefined;\n      const errorsDisplayed = this.config.shouldDisplayErrors(ctrl, formDirective);\n      this.validationStateChanges.next({\n        control: ctrl,\n        errorsDisplayed,\n        errors: ctrl.errors\n      });\n    } else {\n      this.validationStateChanges.next(NO_VALIDATION_STATE);\n    }\n  }\n\n  private shouldDisplayErrors(ctrl: AbstractControl | null): ctrl is AbstractControl {\n    if (!ctrl || !ctrl.invalid || !this.hasDisplayableError(ctrl)) {\n      return false;\n    }\n    const form = this.controlContainer && (this.controlContainer.formDirective as NgForm | FormGroupDirective);\n    return this.config.shouldDisplayErrors(ctrl, form);\n  }\n\n  private findErrorsToDisplay(ctrl: AbstractControl): ErrorsToDisplay {\n    const mergedDirectives: Array = [];\n    const fallbackErrors: Array = [];\n    const alreadyMetTypes = new Set();\n    const shouldContinue = () =>\n      this.config.displayMode === DisplayMode.ALL || (mergedDirectives.length === 0 && fallbackErrors.length === 0);\n    for (let i = 0; i  dir.type === defaultDirective.type);\n        mergedDirectives.push(customDirectiveOfSameType || defaultDirective);\n      }\n      alreadyMetTypes.add(defaultDirective.type);\n    }\n\n    if (shouldContinue()) {\n      const customDirectives = this.errorDirectives.toArray();\n      for (let i = 0; i  0) {\n          throw new Error(`ngx-valdemort: no control found for controlName: '${this.controlName}'.`);\n        }\n      }\n      return control;\n    }\n    return null;\n  }\n\n  private hasDisplayableError(ctrl: AbstractControl) {\n    return (\n      ctrl.errors &&\n      (this.fallbackDirective ||\n        this.defaultValidationErrors.fallback ||\n        Object.keys(ctrl.errors).some(\n          type =>\n            this.defaultValidationErrors.directives.some(dir => dir.type === type) || this.errorDirectives.some(dir => dir.type === type)\n        ))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValdemortConfig.html":{"url":"injectables/ValdemortConfig.html","title":"injectable - ValdemortConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValdemortConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/valdemort-config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The configuration service used by the validation errors component to apply common rules for all\nform controls.\nTo change its default behavior, you can either inject this service in your root module or component and mutate it,\nor define your own implementation and provide it.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayMode\n                            \n                            \n                                errorClasses\n                            \n                            \n                                errorsClasses\n                            \n                            \n                                shouldDisplayErrors\n                            \n                            \n                                shouldThrowOnMissingControl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : DisplayMode.ALL\n                    \n                \n                    \n                        \n                                Defined in src/lib/valdemort-config.service.ts:28\n                        \n                    \n\n            \n                \n                    The display mode of the errors. The default value is ALL, meaning that all the errors existing on a control\n(and which have an error template defined) are displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/valdemort-config.service.ts:46\n                        \n                    \n\n            \n                \n                    Specifies one or several CSS classes (separated by a white space) that are automatically added to the\neach validation error message element. This can be useful to reuse a standard CSS class of your CSS framework\nrather than styling the div element itself.\nThe default value is null (no class is added).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorsClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/lib/valdemort-config.service.ts:37\n                        \n                    \n\n            \n                \n                    Specifies one or several CSS classes (separated by a white space) that are automatically added to the\nvalidation errors element. This can be useful to reuse a standard CSS class of your CSS framework (like\n.invalid-feedback in BootStrap), rather than styling the val-errors element itself.\nThe default value is null (no class is added).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldDisplayErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/lib/valdemort-config.service.ts:55\n                        \n                    \n\n            \n                \n                    Specifies when error messages should be displayed. based on the state of the control itself (touched, dirty, etc.)\nand on the state of the form directive containing it (if any). This function is only called if the control is invalid\nin the first place: if it's valid, errors are never displayed.\nThe default value of this function returns true if the control is touched, or if the form (if any) is submitted.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldThrowOnMissingControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/lib/valdemort-config.service.ts:72\n                        \n                    \n\n            \n                \n                    Specifies if the library should throw an error when a control is not found.\nFor example, this can happen if a typo was made in the controlName.\nIf the check is enabled, then an error will be thrown in such a case.\nOtherwise, the error is silently ignored.\nThe default value of this function returns false, thus disabling the check.\nYou can enable the check by giving it a function that returns true,\nor you can enable it only in development for example with:\nconfig.shouldThrowOnMissingControl = () => !environment.production\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, FormGroupDirective, NgForm } from '@angular/forms';\n\n/**\n * The display mode of the validation errors. For a given control, either all the validation errors\n * are displayed, or only the first one.\n */\nexport enum DisplayMode {\n  ALL,\n  ONE\n}\n\n/**\n * The configuration service used by the validation errors component to apply common rules for all\n * form controls.\n *\n * To change its default behavior, you can either inject this service in your root module or component and mutate it,\n * or define your own implementation and provide it.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValdemortConfig {\n  /**\n   * The display mode of the errors. The default value is ALL, meaning that all the errors existing on a control\n   * (and which have an error template defined) are displayed.\n   */\n  displayMode = DisplayMode.ALL;\n\n  /**\n   * Specifies one or several CSS classes (separated by a white space) that are automatically added to the\n   * validation errors element. This can be useful to reuse a standard CSS class of your CSS framework (like\n   * .invalid-feedback in BootStrap), rather than styling the val-errors element itself.\n   *\n   * The default value is null (no class is added).\n   */\n  errorsClasses: string | null = null;\n\n  /**\n   * Specifies one or several CSS classes (separated by a white space) that are automatically added to the\n   * each validation error message element. This can be useful to reuse a standard CSS class of your CSS framework\n   * rather than styling the div element itself.\n   *\n   * The default value is null (no class is added).\n   */\n  errorClasses: string | null = null;\n\n  /**\n   * Specifies when error messages should be displayed. based on the state of the control itself (touched, dirty, etc.)\n   * and on the state of the form directive containing it (if any). This function is only called if the control is invalid\n   * in the first place: if it's valid, errors are never displayed.\n   *\n   * The default value of this function returns true if the control is touched, or if the form (if any) is submitted.\n   */\n  shouldDisplayErrors: (control: AbstractControl, form: NgForm | FormGroupDirective | undefined) => boolean = (\n    control: AbstractControl,\n    form: NgForm | FormGroupDirective | undefined\n  ) => control.touched || (!!form && form.submitted);\n\n  /**\n   * Specifies if the library should throw an error when a control is not found.\n   * For example, this can happen if a typo was made in the `controlName`.\n   * If the check is enabled, then an error will be thrown in such a case.\n   * Otherwise, the error is silently ignored.\n   *\n   * The default value of this function returns false, thus disabling the check.\n   *\n   * You can enable the check by giving it a function that returns true,\n   * or you can enable it only in development for example with:\n   * `config.shouldThrowOnMissingControl = () => !environment.production`\n   */\n  shouldThrowOnMissingControl: () => boolean = () => false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValdemortModule.html":{"url":"modules/ValdemortModule.html","title":"module - ValdemortModule","body":"\n                   \n\n\n\n\n    Modules\n    ValdemortModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ValdemortModule\n\n\n\ncluster_ValdemortModule_exports\n\n\n\ncluster_ValdemortModule_imports\n\n\n\n\nDefaultValidationErrorsDirective\n\nDefaultValidationErrorsDirective\n\n\n\nValdemortModule\n\nValdemortModule\n\nValdemortModule -->\n\nDefaultValidationErrorsDirective->ValdemortModule\n\n\n\n\n\nValidationErrorDirective\n\nValidationErrorDirective\n\nValdemortModule -->\n\nValidationErrorDirective->ValdemortModule\n\n\n\n\n\nValidationErrorsComponent\n\nValidationErrorsComponent\n\nValdemortModule -->\n\nValidationErrorsComponent->ValdemortModule\n\n\n\n\n\nValidationFallbackDirective\n\nValidationFallbackDirective\n\nValdemortModule -->\n\nValidationFallbackDirective->ValdemortModule\n\n\n\n\n\nDefaultValidationErrorsDirective \n\nDefaultValidationErrorsDirective \n\nDefaultValidationErrorsDirective  -->\n\nValdemortModule->DefaultValidationErrorsDirective \n\n\n\n\n\nValidationErrorDirective \n\nValidationErrorDirective \n\nValidationErrorDirective  -->\n\nValdemortModule->ValidationErrorDirective \n\n\n\n\n\nValidationErrorsComponent \n\nValidationErrorsComponent \n\nValidationErrorsComponent  -->\n\nValdemortModule->ValidationErrorsComponent \n\n\n\n\n\nValidationFallbackDirective \n\nValidationFallbackDirective \n\nValidationFallbackDirective  -->\n\nValdemortModule->ValidationFallbackDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/valdemort.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DefaultValidationErrorsDirective\n                        \n                        \n                            ValidationErrorDirective\n                        \n                        \n                            ValidationErrorsComponent\n                        \n                        \n                            ValidationFallbackDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DefaultValidationErrorsDirective\n                        \n                        \n                            ValidationErrorDirective\n                        \n                        \n                            ValidationErrorsComponent\n                        \n                        \n                            ValidationFallbackDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ValidationErrorsComponent } from './validation-errors.component';\nimport { DefaultValidationErrorsDirective } from './default-validation-errors.directive';\nimport { ValidationErrorDirective } from './validation-error.directive';\nimport { ValidationFallbackDirective } from './validation-fallback.directive';\n\n@NgModule({\n  imports: [ValidationErrorsComponent, ValidationErrorDirective, ValidationFallbackDirective, DefaultValidationErrorsDirective],\n  exports: [ValidationErrorsComponent, ValidationErrorDirective, ValidationFallbackDirective, DefaultValidationErrorsDirective]\n})\nexport class ValdemortModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationErrorContext.html":{"url":"interfaces/ValidationErrorContext.html","title":"interface - ValidationErrorContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationErrorContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/validation-error.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The context of the ValidationErrorDirective\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $implicit\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $implicit:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The error\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * The context of the ValidationErrorDirective\n */\ninterface ValidationErrorContext {\n  /**\n   * The label\n   */\n  $implicit: string | null;\n\n  /**\n   * The error\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any;\n}\n\n/**\n * Directive allowing to define the template for an error of a given type (using the `valError` input), using an ng-template.\n * It's used inside the body of the validation errors component, or inside the body of the default validation errors directive.\n * See the documentation of these two for example usages.\n */\n@Directive({\n  selector: 'ng-template[valError]',\n  standalone: true\n})\nexport class ValidationErrorDirective {\n  /**\n   * The type of the error that the content of the template must display.\n   */\n  @Input({ alias: 'valError', required: true }) type = '';\n\n  constructor(public templateRef: TemplateRef) {}\n\n  static ngTemplateContextGuard(directive: ValidationErrorDirective, context: unknown): context is ValidationErrorContext {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidationErrorDirective.html":{"url":"directives/ValidationErrorDirective.html","title":"directive - ValidationErrorDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ValidationErrorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/validation-error.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive allowing to define the template for an error of a given type (using the valError input), using an ng-template.\nIt's used inside the body of the validation errors component, or inside the body of the default validation errors directive.\nSee the documentation of these two for example usages.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ng-template[valError]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                templateRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ngTemplateContextGuard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                valError\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/validation-error.directive.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                        TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        valError\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/lib/validation-error.directive.ts:33\n                            \n                        \n                \n                    \n                        The type of the error that the content of the template must display.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ngTemplateContextGuard\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngTemplateContextGuard(directive: ValidationErrorDirective, context)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/validation-error.directive.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                directive\n                                            \n                                                            ValidationErrorDirective\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationErrorContext\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        templateRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateRef\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/validation-error.directive.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n/**\n * The context of the ValidationErrorDirective\n */\ninterface ValidationErrorContext {\n  /**\n   * The label\n   */\n  $implicit: string | null;\n\n  /**\n   * The error\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any;\n}\n\n/**\n * Directive allowing to define the template for an error of a given type (using the `valError` input), using an ng-template.\n * It's used inside the body of the validation errors component, or inside the body of the default validation errors directive.\n * See the documentation of these two for example usages.\n */\n@Directive({\n  selector: 'ng-template[valError]',\n  standalone: true\n})\nexport class ValidationErrorDirective {\n  /**\n   * The type of the error that the content of the template must display.\n   */\n  @Input({ alias: 'valError', required: true }) type = '';\n\n  constructor(public templateRef: TemplateRef) {}\n\n  static ngTemplateContextGuard(directive: ValidationErrorDirective, context: unknown): context is ValidationErrorContext {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ValidationErrorsComponent.html":{"url":"components/ValidationErrorsComponent.html","title":"component - ValidationErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ValidationErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/validation-errors.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component allowing to display validation error messages associated to a given form control, form group or form array.\nThe control is provided using the control input of the component. If it's used inside an enclosing form group or\nform array, it can instead be provided using the controlName input of the component.\nExample usage where the control itself is being passed as input:\nExample :  \n    The birth date is mandatory\n    The max value for the birth date is {{ error.max | number }}\n  Example usage where the control name is being passed as input:\nExample :  \n    The birth date is mandatory\n    The max value for the birth date is {{ error.max | number }}\n  This component, if the control is invalid, displays its validation errors using the provided templates.\nThe templates, as shown in the above example, have access to the validation error itself.\nThe label of the control can also be provided as input, and then used in the templates:\nExample :  \n    {{ label }} is mandatory\n    The max value for {{ label }} is {{ error.max | number }}\n  The component‘s behavior is configured globally by the Config service (see its documentation for more details). It can\n\ndisplay the first error, or all the errors\nadd CSS classes to its host  element\nadd CSS classes to each error message element being displayed\nchoose when to display the errors (dirty, touched, touched and submitted, etc.)\n\nGlobal, default templates can be defined (and used by this component) using the default validation errors directive\n(see its documentation for details). So, if the default error messages are defined and sufficient for a given control, all you\nneed is\nExample :or, if the default templates expect a label:\nExample :If, however, you want to override one or several error messages by custom ones, you can do so by simply defining them inside the\ncomponent:\nExample :\n  You're too young, sorry\nA fallback template can also be provided. This fallback template is used for all the errors that exist on the form control\nbut are not handled by any of the specific error templates:\nExample :\n  You're too young, sorry\n  {{ label }} has an unhandled error of type {{ type }}: {{ error | json }}\nNote that, the fallback template can also be defined in the default validation errors directive (see its documentation for details).\nIf a fallback template is defined inside val-errors, it overrides the default fallback.\nIf an error is present on the control, but doesn't have any template, default template or fallback template defined for its type,\nthen it's not displayed. If the control is valid, or if none of the errors of the component has a matching template or default template,\nthen this component itself is hidden.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n                DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                val-errors\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgIf\n                            NgFor\n                            NgTemplateOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./validation-errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                errorClasses\n                            \n                            \n                                    \n                                errorDirectives\n                            \n                            \n                                    Readonly\n                                errorsClasses\n                            \n                            \n                                    \n                                fallbackDirective\n                            \n                            \n                                    Readonly\n                                vm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngDoCheck\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                controlName\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ValdemortConfig, defaultValidationErrors: DefaultValidationErrors, controlContainer: ControlContainer)\n                    \n                \n                        \n                            \n                                Defined in src/lib/validation-errors.component.ts:197\n                            \n                        \n\n                \n                    \n                            defined by using the default validation errors directive\nIt's injected so that we can know if it exists and, if it does, if its form directive has been submitted or not:\nthe config service shouldDisplayErrors function can choose (and does by default) to use that information.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ValdemortConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the Config service instance, defining the behavior of this component\n\n                                                        \n                                                \n                                                \n                                                        defaultValidationErrors\n                                                  \n                                                        \n                                                                        DefaultValidationErrors\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the service holding the default error templates, optionally\ndefined by using the default validation errors directive\n\n                                                        \n                                                \n                                                \n                                                        controlContainer\n                                                  \n                                                        \n                                                                    ControlContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                one of the 4 form group or form array directives that can \"wrap\" the control.\nIt's injected so that we can know if it exists and, if it does, if its form directive has been submitted or not:\nthe config service shouldDisplayErrors function can choose (and does by default) to use that information.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     AbstractControl | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/validation-errors.component.ts:163\n                            \n                        \n                \n                    \n                        The FormControl, FormGroup or FormArray containing the validation errors.\nIf set, the controlName input is ignored\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        controlName\n                    \n                \n                \n                    \n                        Type :     string | number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/validation-errors.component.ts:171\n                            \n                        \n                \n                    \n                        The name (or the index, in case it's contained in a FormArray) of the FormControl, FormGroup or FormArray containing the validation\nerrors.\nIgnored if the control input is set, and only usable if the control to validate is part of a control container\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/validation-errors.component.ts:177\n                            \n                        \n                \n                    \n                        The label of the field, exposed to templates so they can use it in the error message.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/validation-errors.component.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoCheck\n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/validation-errors.component.ts:236\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        errorClasses\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.config.errorClasses || ''\n                    \n                \n                    \n                        \n                                Defined in src/lib/validation-errors.component.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        errorDirectives\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ValidationErrorDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/validation-errors.component.ts:183\n                        \n                    \n\n            \n                \n                    The list of validation error directives (i.e. ) contained inside the component element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        errorsClasses\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.config.errorsClasses || ''\n                    \n                \n                    \n                        \n                                Defined in src/lib/validation-errors.component.ts:193\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fallbackDirective\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationFallbackDirective | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(ValidationFallbackDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/validation-errors.component.ts:189\n                        \n                    \n\n            \n                \n                    The validation fallback directive (i.e. ) contained inside the component element.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        vm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Signal\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/validation-errors.component.ts:191\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  DoCheck,\n  Input,\n  Optional,\n  QueryList,\n  Signal\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormArray, FormGroupDirective, NgForm, ValidationErrors } from '@angular/forms';\nimport { DisplayMode, ValdemortConfig } from './valdemort-config.service';\nimport { DefaultValidationErrors } from './default-validation-errors.service';\nimport { ValidationErrorDirective } from './validation-error.directive';\nimport { ValidationFallbackDirective } from './validation-fallback.directive';\nimport { NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { combineLatest, distinctUntilChanged, map, Subject } from 'rxjs';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\ninterface FallbackError {\n  type: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any;\n}\n\ninterface ErrorsToDisplay {\n  // The validation error directives to display\n  errors: Array;\n\n  // The fallback directive to use to display the fallback errors\n  fallback: ValidationFallbackDirective | undefined;\n\n  // the fallback errors to display (empty if there is no fallback directive)\n  fallbackErrors: Array;\n}\n\ntype ViewModel =\n  | {\n      shouldDisplayErrors: false;\n    }\n  | {\n      shouldDisplayErrors: true;\n      errorsToDisplay: ErrorsToDisplay;\n      control: AbstractControl;\n    };\n\nconst NO_ERRORS: ViewModel = {\n  shouldDisplayErrors: false\n};\n\ninterface ValidationState {\n  control: AbstractControl | null;\n  errorsDisplayed: boolean | null;\n  errors: ValidationErrors | null;\n}\n\nconst NO_VALIDATION_STATE: ValidationState = {\n  control: null,\n  errorsDisplayed: null,\n  errors: null\n};\n\nfunction areValidationStatesEqual(previous: ValidationState, current: ValidationState): boolean {\n  return previous.control === current.control && previous.errorsDisplayed === current.errorsDisplayed && previous.errors === current.errors;\n}\n\n/**\n * Component allowing to display validation error messages associated to a given form control, form group or form array.\n * The control is provided using the `control` input of the component. If it's used inside an enclosing form group or\n * form array, it can instead be provided using the `controlName` input of the component.\n *\n * Example usage where the control itself is being passed as input:\n * ```\n *   \n *     The birth date is mandatory\n *     The max value for the birth date is {{ error.max | number }}\n *   \n * ```\n *\n * Example usage where the control name is being passed as input:\n * ```\n *   \n *     The birth date is mandatory\n *     The max value for the birth date is {{ error.max | number }}\n *   \n * ```\n *\n * This component, if the control is invalid, displays its validation errors using the provided templates.\n * The templates, as shown in the above example, have access to the validation error itself.\n *\n * The label of the control can also be provided as input, and then used in the templates:\n * ```\n *   \n *     {{ label }} is mandatory\n *     The max value for {{ label }} is {{ error.max | number }}\n *   \n * ```\n *\n * The component‘s behavior is configured globally by the Config service (see its documentation for more details). It can\n * - display the first error, or all the errors\n * - add CSS classes to its host `` element\n * - add CSS classes to each error message element being displayed\n * - choose when to display the errors (dirty, touched, touched and submitted, etc.)\n *\n * Global, default templates can be defined (and used by this component) using the default validation errors directive\n * (see its documentation for details). So, if the default error messages are defined and sufficient for a given control, all you\n * need is\n *\n * ```\n * \n * ```\n *\n * or, if the default templates expect a label:\n *\n * ```\n * \n * ```\n *\n * If, however, you want to override one or several error messages by custom ones, you can do so by simply defining them inside the\n * component:\n *\n * ```\n * \n *   You're too young, sorry\n * \n * ```\n *\n * A fallback template can also be provided. This fallback template is used for all the errors that exist on the form control\n * but are not handled by any of the specific error templates:\n * ```\n * \n *   You're too young, sorry\n *   {{ label }} has an unhandled error of type {{ type }}: {{ error | json }}\n * \n * ```\n * Note that, the fallback template can also be defined in the default validation errors directive (see its documentation for details).\n * If a fallback template is defined inside `val-errors`, it overrides the default fallback.\n *\n * If an error is present on the control, but doesn't have any template, default template or fallback template defined for its type,\n * then it's not displayed. If the control is valid, or if none of the errors of the component has a matching template or default template,\n * then this component itself is hidden.\n */\n@Component({\n  selector: 'val-errors',\n  templateUrl: './validation-errors.component.html',\n  host: {\n    '[class]': 'errorsClasses',\n    '[style.display]': `vm().shouldDisplayErrors ? '' : 'none'`\n  },\n  standalone: true,\n  imports: [NgIf, NgFor, NgTemplateOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValidationErrorsComponent implements AfterContentInit, DoCheck {\n  /**\n   * The FormControl, FormGroup or FormArray containing the validation errors.\n   * If set, the controlName input is ignored\n   */\n  @Input()\n  control: AbstractControl | null = null;\n\n  /**\n   * The name (or the index, in case it's contained in a FormArray) of the FormControl, FormGroup or FormArray containing the validation\n   * errors.\n   * Ignored if the control input is set, and only usable if the control to validate is part of a control container\n   */\n  @Input()\n  controlName: string | number | null = null;\n\n  /**\n   * The label of the field, exposed to templates so they can use it in the error message.\n   */\n  @Input()\n  label: string | null = null;\n\n  /**\n   * The list of validation error directives (i.e. ) contained inside the component element.\n   */\n  @ContentChildren(ValidationErrorDirective)\n  errorDirectives!: QueryList;\n\n  /**\n   * The validation fallback directive (i.e. ) contained inside the component element.\n   */\n  @ContentChild(ValidationFallbackDirective)\n  fallbackDirective: ValidationFallbackDirective | undefined;\n\n  readonly vm: Signal;\n\n  readonly errorsClasses = this.config.errorsClasses || '';\n  readonly errorClasses = this.config.errorClasses || '';\n\n  private validationStateChanges = new Subject();\n  private contentInit = new Subject();\n\n  /**\n   * @param config the Config service instance, defining the behavior of this component\n   * @param defaultValidationErrors the service holding the default error templates, optionally\n   * defined by using the default validation errors directive\n   * @param controlContainer one of the 4 form group or form array directives that can \"wrap\" the control.\n   * It's injected so that we can know if it exists and, if it does, if its form directive has been submitted or not:\n   * the config service shouldDisplayErrors function can choose (and does by default) to use that information.\n   */\n  constructor(\n    private config: ValdemortConfig,\n    private defaultValidationErrors: DefaultValidationErrors,\n    @Optional() private controlContainer: ControlContainer\n  ) {\n    this.vm = toSignal(\n      combineLatest([this.validationStateChanges.pipe(distinctUntilChanged(areValidationStatesEqual)), this.contentInit]).pipe(\n        map(([validationState]) => {\n          const ctrl = validationState.control;\n          if (this.shouldDisplayErrors(ctrl)) {\n            const errorsToDisplay = this.findErrorsToDisplay(ctrl);\n            return {\n              shouldDisplayErrors: true,\n              control: ctrl,\n              errorsToDisplay\n            };\n          } else {\n            return NO_ERRORS;\n          }\n        })\n      ),\n      { initialValue: NO_ERRORS }\n    );\n  }\n\n  ngAfterContentInit(): void {\n    this.contentInit.next();\n  }\n\n  ngDoCheck(): void {\n    const ctrl = this.findActualControl();\n    if (ctrl) {\n      const formDirective = this.controlContainer?.formDirective as NgForm | FormGroupDirective | undefined;\n      const errorsDisplayed = this.config.shouldDisplayErrors(ctrl, formDirective);\n      this.validationStateChanges.next({\n        control: ctrl,\n        errorsDisplayed,\n        errors: ctrl.errors\n      });\n    } else {\n      this.validationStateChanges.next(NO_VALIDATION_STATE);\n    }\n  }\n\n  private shouldDisplayErrors(ctrl: AbstractControl | null): ctrl is AbstractControl {\n    if (!ctrl || !ctrl.invalid || !this.hasDisplayableError(ctrl)) {\n      return false;\n    }\n    const form = this.controlContainer && (this.controlContainer.formDirective as NgForm | FormGroupDirective);\n    return this.config.shouldDisplayErrors(ctrl, form);\n  }\n\n  private findErrorsToDisplay(ctrl: AbstractControl): ErrorsToDisplay {\n    const mergedDirectives: Array = [];\n    const fallbackErrors: Array = [];\n    const alreadyMetTypes = new Set();\n    const shouldContinue = () =>\n      this.config.displayMode === DisplayMode.ALL || (mergedDirectives.length === 0 && fallbackErrors.length === 0);\n    for (let i = 0; i  dir.type === defaultDirective.type);\n        mergedDirectives.push(customDirectiveOfSameType || defaultDirective);\n      }\n      alreadyMetTypes.add(defaultDirective.type);\n    }\n\n    if (shouldContinue()) {\n      const customDirectives = this.errorDirectives.toArray();\n      for (let i = 0; i  0) {\n          throw new Error(`ngx-valdemort: no control found for controlName: '${this.controlName}'.`);\n        }\n      }\n      return control;\n    }\n    return null;\n  }\n\n  private hasDisplayableError(ctrl: AbstractControl) {\n    return (\n      ctrl.errors &&\n      (this.fallbackDirective ||\n        this.defaultValidationErrors.fallback ||\n        Object.keys(ctrl.errors).some(\n          type =>\n            this.defaultValidationErrors.directives.some(dir => dir.type === type) || this.errorDirectives.some(dir => dir.type === type)\n        ))\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'ValidationErrorsComponent', 'selector': 'val-errors'}];\n    var DIRECTIVES = [{'name': 'DefaultValidationErrorsDirective', 'selector': 'val-default-errors'},{'name': 'ValidationErrorDirective', 'selector': 'ng-template[valError]'},{'name': 'ValidationFallbackDirective', 'selector': 'ng-template[valFallback]'}];\n    var ACTUAL_COMPONENT = {'name': 'ValidationErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationFallbackContext.html":{"url":"interfaces/ValidationFallbackContext.html","title":"interface - ValidationFallbackContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationFallbackContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/validation-fallback.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The context of the ValidationFallbackDirective\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $implicit\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $implicit:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The error\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the error\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * The context of the ValidationFallbackDirective\n */\ninterface ValidationFallbackContext {\n  /**\n   * The label\n   */\n  $implicit: string | null;\n\n  /**\n   * The error\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any;\n\n  /**\n   * The type of the error\n   */\n  type: string;\n}\n\n/**\n * Directive allowing to define a fallback template for an error of a type that is not handled by any validation error directive.\n * It's used inside the body of the validation errors component, or inside the body of the default validation errors directive.\n * See the documentation of these two for example usages.\n *\n * This is useful to handle forgotten errors instead of displaying no error at all, or to handle all or several error types in the same way,\n * for example by relying on the error key to choose an internationalized message.\n */\n@Directive({\n  selector: 'ng-template[valFallback]',\n  standalone: true\n})\nexport class ValidationFallbackDirective {\n  constructor(public templateRef: TemplateRef) {}\n\n  static ngTemplateContextGuard(directive: ValidationFallbackDirective, context: unknown): context is ValidationFallbackContext {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidationFallbackDirective.html":{"url":"directives/ValidationFallbackDirective.html","title":"directive - ValidationFallbackDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ValidationFallbackDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/validation-fallback.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive allowing to define a fallback template for an error of a type that is not handled by any validation error directive.\nIt's used inside the body of the validation errors component, or inside the body of the default validation errors directive.\nSee the documentation of these two for example usages.\nThis is useful to handle forgotten errors instead of displaying no error at all, or to handle all or several error types in the same way,\nfor example by relying on the error key to choose an internationalized message.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        ng-template[valFallback]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                templateRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                ngTemplateContextGuard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/validation-fallback.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                        TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        ngTemplateContextGuard\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngTemplateContextGuard(directive: ValidationFallbackDirective, context)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/validation-fallback.directive.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                directive\n                                            \n                                                            ValidationFallbackDirective\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationFallbackContext\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        templateRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateRef\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/validation-fallback.directive.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * The context of the ValidationFallbackDirective\n */\ninterface ValidationFallbackContext {\n  /**\n   * The label\n   */\n  $implicit: string | null;\n\n  /**\n   * The error\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any;\n\n  /**\n   * The type of the error\n   */\n  type: string;\n}\n\n/**\n * Directive allowing to define a fallback template for an error of a type that is not handled by any validation error directive.\n * It's used inside the body of the validation errors component, or inside the body of the default validation errors directive.\n * See the documentation of these two for example usages.\n *\n * This is useful to handle forgotten errors instead of displaying no error at all, or to handle all or several error types in the same way,\n * for example by relying on the error key to choose an internationalized message.\n */\n@Directive({\n  selector: 'ng-template[valFallback]',\n  standalone: true\n})\nexport class ValidationFallbackDirective {\n  constructor(public templateRef: TemplateRef) {}\n\n  static ngTemplateContextGuard(directive: ValidationFallbackDirective, context: unknown): context is ValidationFallbackContext {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationState.html":{"url":"interfaces/ValidationState.html","title":"interface - ValidationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/validation-errors.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            control\n                                        \n                                \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            errorsDisplayed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        control\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        control:     AbstractControl | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AbstractControl | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     ValidationErrors | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidationErrors | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorsDisplayed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorsDisplayed:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  DoCheck,\n  Input,\n  Optional,\n  QueryList,\n  Signal\n} from '@angular/core';\nimport { AbstractControl, ControlContainer, FormArray, FormGroupDirective, NgForm, ValidationErrors } from '@angular/forms';\nimport { DisplayMode, ValdemortConfig } from './valdemort-config.service';\nimport { DefaultValidationErrors } from './default-validation-errors.service';\nimport { ValidationErrorDirective } from './validation-error.directive';\nimport { ValidationFallbackDirective } from './validation-fallback.directive';\nimport { NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { combineLatest, distinctUntilChanged, map, Subject } from 'rxjs';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\ninterface FallbackError {\n  type: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any;\n}\n\ninterface ErrorsToDisplay {\n  // The validation error directives to display\n  errors: Array;\n\n  // The fallback directive to use to display the fallback errors\n  fallback: ValidationFallbackDirective | undefined;\n\n  // the fallback errors to display (empty if there is no fallback directive)\n  fallbackErrors: Array;\n}\n\ntype ViewModel =\n  | {\n      shouldDisplayErrors: false;\n    }\n  | {\n      shouldDisplayErrors: true;\n      errorsToDisplay: ErrorsToDisplay;\n      control: AbstractControl;\n    };\n\nconst NO_ERRORS: ViewModel = {\n  shouldDisplayErrors: false\n};\n\ninterface ValidationState {\n  control: AbstractControl | null;\n  errorsDisplayed: boolean | null;\n  errors: ValidationErrors | null;\n}\n\nconst NO_VALIDATION_STATE: ValidationState = {\n  control: null,\n  errorsDisplayed: null,\n  errors: null\n};\n\nfunction areValidationStatesEqual(previous: ValidationState, current: ValidationState): boolean {\n  return previous.control === current.control && previous.errorsDisplayed === current.errorsDisplayed && previous.errors === current.errors;\n}\n\n/**\n * Component allowing to display validation error messages associated to a given form control, form group or form array.\n * The control is provided using the `control` input of the component. If it's used inside an enclosing form group or\n * form array, it can instead be provided using the `controlName` input of the component.\n *\n * Example usage where the control itself is being passed as input:\n * ```\n *   \n *     The birth date is mandatory\n *     The max value for the birth date is {{ error.max | number }}\n *   \n * ```\n *\n * Example usage where the control name is being passed as input:\n * ```\n *   \n *     The birth date is mandatory\n *     The max value for the birth date is {{ error.max | number }}\n *   \n * ```\n *\n * This component, if the control is invalid, displays its validation errors using the provided templates.\n * The templates, as shown in the above example, have access to the validation error itself.\n *\n * The label of the control can also be provided as input, and then used in the templates:\n * ```\n *   \n *     {{ label }} is mandatory\n *     The max value for {{ label }} is {{ error.max | number }}\n *   \n * ```\n *\n * The component‘s behavior is configured globally by the Config service (see its documentation for more details). It can\n * - display the first error, or all the errors\n * - add CSS classes to its host `` element\n * - add CSS classes to each error message element being displayed\n * - choose when to display the errors (dirty, touched, touched and submitted, etc.)\n *\n * Global, default templates can be defined (and used by this component) using the default validation errors directive\n * (see its documentation for details). So, if the default error messages are defined and sufficient for a given control, all you\n * need is\n *\n * ```\n * \n * ```\n *\n * or, if the default templates expect a label:\n *\n * ```\n * \n * ```\n *\n * If, however, you want to override one or several error messages by custom ones, you can do so by simply defining them inside the\n * component:\n *\n * ```\n * \n *   You're too young, sorry\n * \n * ```\n *\n * A fallback template can also be provided. This fallback template is used for all the errors that exist on the form control\n * but are not handled by any of the specific error templates:\n * ```\n * \n *   You're too young, sorry\n *   {{ label }} has an unhandled error of type {{ type }}: {{ error | json }}\n * \n * ```\n * Note that, the fallback template can also be defined in the default validation errors directive (see its documentation for details).\n * If a fallback template is defined inside `val-errors`, it overrides the default fallback.\n *\n * If an error is present on the control, but doesn't have any template, default template or fallback template defined for its type,\n * then it's not displayed. If the control is valid, or if none of the errors of the component has a matching template or default template,\n * then this component itself is hidden.\n */\n@Component({\n  selector: 'val-errors',\n  templateUrl: './validation-errors.component.html',\n  host: {\n    '[class]': 'errorsClasses',\n    '[style.display]': `vm().shouldDisplayErrors ? '' : 'none'`\n  },\n  standalone: true,\n  imports: [NgIf, NgFor, NgTemplateOutlet],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValidationErrorsComponent implements AfterContentInit, DoCheck {\n  /**\n   * The FormControl, FormGroup or FormArray containing the validation errors.\n   * If set, the controlName input is ignored\n   */\n  @Input()\n  control: AbstractControl | null = null;\n\n  /**\n   * The name (or the index, in case it's contained in a FormArray) of the FormControl, FormGroup or FormArray containing the validation\n   * errors.\n   * Ignored if the control input is set, and only usable if the control to validate is part of a control container\n   */\n  @Input()\n  controlName: string | number | null = null;\n\n  /**\n   * The label of the field, exposed to templates so they can use it in the error message.\n   */\n  @Input()\n  label: string | null = null;\n\n  /**\n   * The list of validation error directives (i.e. ) contained inside the component element.\n   */\n  @ContentChildren(ValidationErrorDirective)\n  errorDirectives!: QueryList;\n\n  /**\n   * The validation fallback directive (i.e. ) contained inside the component element.\n   */\n  @ContentChild(ValidationFallbackDirective)\n  fallbackDirective: ValidationFallbackDirective | undefined;\n\n  readonly vm: Signal;\n\n  readonly errorsClasses = this.config.errorsClasses || '';\n  readonly errorClasses = this.config.errorClasses || '';\n\n  private validationStateChanges = new Subject();\n  private contentInit = new Subject();\n\n  /**\n   * @param config the Config service instance, defining the behavior of this component\n   * @param defaultValidationErrors the service holding the default error templates, optionally\n   * defined by using the default validation errors directive\n   * @param controlContainer one of the 4 form group or form array directives that can \"wrap\" the control.\n   * It's injected so that we can know if it exists and, if it does, if its form directive has been submitted or not:\n   * the config service shouldDisplayErrors function can choose (and does by default) to use that information.\n   */\n  constructor(\n    private config: ValdemortConfig,\n    private defaultValidationErrors: DefaultValidationErrors,\n    @Optional() private controlContainer: ControlContainer\n  ) {\n    this.vm = toSignal(\n      combineLatest([this.validationStateChanges.pipe(distinctUntilChanged(areValidationStatesEqual)), this.contentInit]).pipe(\n        map(([validationState]) => {\n          const ctrl = validationState.control;\n          if (this.shouldDisplayErrors(ctrl)) {\n            const errorsToDisplay = this.findErrorsToDisplay(ctrl);\n            return {\n              shouldDisplayErrors: true,\n              control: ctrl,\n              errorsToDisplay\n            };\n          } else {\n            return NO_ERRORS;\n          }\n        })\n      ),\n      { initialValue: NO_ERRORS }\n    );\n  }\n\n  ngAfterContentInit(): void {\n    this.contentInit.next();\n  }\n\n  ngDoCheck(): void {\n    const ctrl = this.findActualControl();\n    if (ctrl) {\n      const formDirective = this.controlContainer?.formDirective as NgForm | FormGroupDirective | undefined;\n      const errorsDisplayed = this.config.shouldDisplayErrors(ctrl, formDirective);\n      this.validationStateChanges.next({\n        control: ctrl,\n        errorsDisplayed,\n        errors: ctrl.errors\n      });\n    } else {\n      this.validationStateChanges.next(NO_VALIDATION_STATE);\n    }\n  }\n\n  private shouldDisplayErrors(ctrl: AbstractControl | null): ctrl is AbstractControl {\n    if (!ctrl || !ctrl.invalid || !this.hasDisplayableError(ctrl)) {\n      return false;\n    }\n    const form = this.controlContainer && (this.controlContainer.formDirective as NgForm | FormGroupDirective);\n    return this.config.shouldDisplayErrors(ctrl, form);\n  }\n\n  private findErrorsToDisplay(ctrl: AbstractControl): ErrorsToDisplay {\n    const mergedDirectives: Array = [];\n    const fallbackErrors: Array = [];\n    const alreadyMetTypes = new Set();\n    const shouldContinue = () =>\n      this.config.displayMode === DisplayMode.ALL || (mergedDirectives.length === 0 && fallbackErrors.length === 0);\n    for (let i = 0; i  dir.type === defaultDirective.type);\n        mergedDirectives.push(customDirectiveOfSameType || defaultDirective);\n      }\n      alreadyMetTypes.add(defaultDirective.type);\n    }\n\n    if (shouldContinue()) {\n      const customDirectives = this.errorDirectives.toArray();\n      for (let i = 0; i  0) {\n          throw new Error(`ngx-valdemort: no control found for controlName: '${this.controlName}'.`);\n        }\n      }\n      return control;\n    }\n    return null;\n  }\n\n  private hasDisplayableError(ctrl: AbstractControl) {\n    return (\n      ctrl.errors &&\n      (this.fallbackDirective ||\n        this.defaultValidationErrors.fallback ||\n        Object.keys(ctrl.errors).some(\n          type =>\n            this.defaultValidationErrors.directives.some(dir => dir.type === type) || this.errorDirectives.some(dir => dir.type === type)\n        ))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n12.0.0 (2024-05-26)\n⚠ BREAKING CHANGES\n\nngx-valdemort is now based on Angular 18.x. If you want to use it with an older version of Angular, then stick to a previous version of ngx-valdemort.\n\nFeatures\n\nmake the component OnPush (630a53c)\nupgrade to Angular and CLI 18 (4667e53)\n\n11.0.0 (2023-11-15)\n⚠ BREAKING CHANGES\n\nngx-valdemort is now based on Angular 17.x. If you want to use it with an older version of Angular, then stick to a previous version of ngx-valdemort.\n\nFeatures\n\ndemo: use SSR and SSG for demo (8581814)\nupgrade to Angular and CLI 17 (da9a01d)\n\n10.0.1 (2023-05-05)\nBug Fixes\n\nfix dependency version in published package.json (8c50d05)\n\n10.0.0 (2023-05-05)\n⚠ BREAKING CHANGES\n\nngx-valdemort is now based on Angular 16.x. If you want to use it with an older version of Angular, then stick to a previous version of ngx-valdemort.\n\nFeatures\n\nmake valError input required (12d5c74)\nupgrade to Angular 16 (02d8d46)\n\n9.0.0 (2022-11-18)\nAll components and directives are now standalone. The ValdemortModule is still usable as it was before, \nbut you can also import the directives directly, from your standalone components or from your modules.\nWe have also updated our documentation about the integration of ngx-valdemort in Angular Material \napplications, because a tiny CSS adjustment is now necessary for error messages to look good with material. \n⚠ BREAKING CHANGES\n\nngx-valdemort is now based on Angular 15.x. If you want to use it with an older version of Angular, then stick to a previous version of ngx-valdemort.\n\nFeatures\n\nmake all components and directives standalone (b4f7312)\nupgrade to angular 15 (5bad8ad)\n\n8.1.0 (2022-10-08)\nFeatures\n\nimprove typing of the structural directives (34ddd5b)\n\n8.0.0 (2022-06-03)\n⚠ BREAKING CHANGES\n\nngx-valdemort is now based on Angular 14.x. If you want to use it with an older version of Angular, then stick to the previous version of ngx-valdemort.\n\n7.0.0 (2021-11-04)\n⚠ BREAKING CHANGES\n\nngx-valdemort is now based on Angular 13.x. It also needs RxJS v7.4+. If you want to use it with an older version of Angular, then stick to the previous version of ngx-valdemort.\n\nBug Fixes\n\nangular config invalid tsconfig reference (0921257)\n\nremove debug expression from demo (0502df0)\n\nmigrate to ng and cli v13 (2fa7cb0)\n\n\n6.0.0 (2021-05-13)\n⚠ BREAKING CHANGES\n\nngx-valdemort now targets Angular 12.0.0 and Ivy only. If you want to use it with Angular 11.x or View Engine, stick to the previous version of ngx-valdemort. Partial Ivy compilation is now enabled, allowing ngcc to skip this package and you to have faster builds! 🚀\n\nFeatures\n\nenable Ivy partial compilation (5166464)\n\nBug Fixes\n\nrenovate config (80edb78)\n\n5.1.0 (2021-04-09)\nFeatures\n\nadd a validation fallback directive (d16d844), closes #264\n\nThe template of the valFallback directive is used for all the errors that exist on the form control but are not handled by any of the specific error templates:\nExample :\n  {{ label }} is mandatory\n  {{ label }} must be at most {{ error.max | number }}\n  {{ label }} has an unhandled error of type {{ type }}: {{ error | json }}\n\nallow throwing on missing control (c2b739b)\n\nThis adds a configuration option called shouldThrowOnMissingControl that checks if the control is not found, if set to a function that returns true.\nIt is set to a function that returns false by default, so this is not breaking change.\nThis allows to catch situations where the controlName has been wrongly specified:\nExample :\n\nIn that case, if the new option is enabled, valdemort will throw:\nExample :ngx-valdemort: no control found for controlName: 'lastName'.As the option accepts a function, it can easily be enabled in dev and tests, but disabled in production:\nExample :config.shouldThrowOnMissingControl = () => !environment.production;5.1.0-beta.1 (2021-04-03)\nFeatures\n\nadd a validation fallback directive (d16d844), closes #264\n\n5.1.0-beta.0 (2021-03-26)\nFeatures\n\nallow throwing on missing control (c2b739b)\n\nThis adds a configuration option called shouldThrowOnMissingControl that checks if the control is not found, if set to a function that returns true.\nIt is set to a function that returns false by default, so this is not breaking change.\nThis allows to catch situations where the controlName has been wrongly specified:\nExample :\n\nIn that case, if the new option is enabled, valdemort will throw:\nExample :ngx-valdemort: no control found for controlName: 'lastName'.As the option accepts a function, it can easily be enabled in dev and tests, but disabled in production:\nExample :config.shouldThrowOnMissingControl = () => !environment.production;5.0.0 (2020-11-20)\nFeatures\n\nupdate to Angular v11 (750d7ef)\n\n⚠ BREAKING CHANGES\n\nngx-valdemort is now based on Angular 11.x. If you want to use it with an older version of Angular, then stick to the previous version of ngx-valdemort.\n\n4.0.0 (2020-06-26)\nFeatures\n\nupdate to Angular v10 (61c624b)\n\n⚠ BREAKING CHANGES\n\nngx-valdemort is now based on Angular 10.x. If you want to use it with an older version of Angular, then stick to the previous version of ngx-valdemort.\n\n3.0.0 (2020-02-07)\n⚠ BREAKING CHANGES\n\nngx-valdemort is now based on Angular 9.x. If you want to use it with an older version of Angular, then stick to the previous version of ngx-valdemort.\n\nFeatures\n\nsupport basic ng-add (ac16e33)\n\nBug Fixes\n\nforce string conversion in prism (aec5b1d)\n\nupdate to ng and cli v9.0.0 (4d258c6)\n\n\n2.0.0 (2019-05-31)\nBug Fixes\n\ncodelyzer rule name (2474ea5)\ncorrect class in bootstrap integration doc (2164b97)\nfix prism highlight signature (b33bcff)\n\nchore\n\nbump to ng 8.0.0 (c5e4177)\n\nBREAKING CHANGES\n\nngx-valdemort is now based on Angular 8.x. If you want to use it with an older version of Angular, then stick to the previous version of ngx-valdemort.\n\n\n1.0.0 (2018-11-02)\nThis 1.0.0 version is based and tested on Angular 7, although it should run fine with Angular 6.\nFuture versions are not guaranteed to support Angular 6, though. We encourage you to upgrade.\n\n0.1.1 (2018-09-07)\nBug Fixes\n\naot build with strict null checks (193990a), closes #86\n\n\n0.1.0 (2018-06-12)\nFirst release :champagne:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : 2.6.2\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.0.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DisplayMode   (src/.../valdemort-config.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/valdemort-config.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DisplayMode\n                    \n                \n                    \n                        \n                            The display mode of the validation errors. For a given control, either all the validation errors\nare displayed, or only the first one.\n\n                        \n                    \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                 ONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            areValidationStatesEqual   (src/.../validation-errors.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/validation-errors.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        areValidationStatesEqual\n                        \n                    \n                \n            \n            \n                \nareValidationStatesEqual(previous: ValidationState, current: ValidationState)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                previous\n                                            \n                                                            ValidationState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                            ValidationState\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\nngx-valdemort\nngx-valdemort gives you simpler, cleaner validation error messages for your Angular components.\nWhy should you care?\nIf you've ever written forms like the following:\nExample :\n  \n  \n    The email is required\n    The email must be a valid email address\n  \n\n  \n  \n    The age is required\n    You must be at least {{ form.controls.age.getError('min').min }} years old\n  \n\n  Submit\nngx-valdemort allows writing the above form in a simpler, cleaner way by using the ValidationErrorsComponent:\nExample :\n  \n  \n    The email is required\n    The email must be a valid email address\n  \n\n  \n  \n    The age is required\n    You must be at least {{ error.min }} years old\n  \n\n  Submit\nEven better, you can define default error messages once, and use them everywhere, while still being able to\noverride them when needed:\nExample :\n  \n  \n\n  \n  \n    You must be at least {{ error.min }} years old\n  \n\n  Submit\nIt works with ngModel too!\nExample :\nLearn more and see it in action on our web page\nInstallation\nUsing the CLI: ng add ngx-valdemort\nUsing npm: npm install ngx-valdemort\nUsing yarn: yarn add ngx-valdemort\nGetting started\n\nImport ValdemortModule, and other needed classes from ngx-valdemort\nAdd the module to the imports of your application module\nUse  in your forms\nEnjoy!\n\nGo further:\n\ndefine default error messages using \nconfigure the look and feel globally by injecting and customizing the ValdemortConfig service\n\nIssues, questions\nPlease, provide feedback by filing issues, or by submitting pull requests, to the Github Project.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Ninja Squad\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ValdemortModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ValdemortModule\n\n\n\ncluster_ValdemortModule_imports\n\n\n\ncluster_ValdemortModule_exports\n\n\n\n\nDefaultValidationErrorsDirective\n\nDefaultValidationErrorsDirective\n\n\n\nValdemortModule\n\nValdemortModule\n\nValdemortModule -->\n\nDefaultValidationErrorsDirective->ValdemortModule\n\n\n\n\n\nValidationErrorDirective\n\nValidationErrorDirective\n\nValdemortModule -->\n\nValidationErrorDirective->ValdemortModule\n\n\n\n\n\nValidationErrorsComponent\n\nValidationErrorsComponent\n\nValdemortModule -->\n\nValidationErrorsComponent->ValdemortModule\n\n\n\n\n\nValidationFallbackDirective\n\nValidationFallbackDirective\n\nValdemortModule -->\n\nValidationFallbackDirective->ValdemortModule\n\n\n\n\n\nDefaultValidationErrorsDirective \n\nDefaultValidationErrorsDirective \n\nDefaultValidationErrorsDirective  -->\n\nValdemortModule->DefaultValidationErrorsDirective \n\n\n\n\n\nValidationErrorDirective \n\nValidationErrorDirective \n\nValidationErrorDirective  -->\n\nValdemortModule->ValidationErrorDirective \n\n\n\n\n\nValidationErrorsComponent \n\nValidationErrorsComponent \n\nValidationErrorsComponent  -->\n\nValdemortModule->ValidationErrorsComponent \n\n\n\n\n\nValidationFallbackDirective \n\nValidationFallbackDirective \n\nValidationFallbackDirective  -->\n\nValdemortModule->ValidationFallbackDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 12.0.0\n        \n            Description : Simple, consistent validation error messages for your Angular forms\n        \n            Keywords : angular, form, errors, messages, validation\n        \n            Bugs : https://github.com/Ninja-Squad/ngx-valdemort/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/Ninja-Squad/ngx-valdemort.git\n        \n            Author : Ninja Squad\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ViewModel   (src/.../validation-errors.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/validation-errors.component.ts\n    \n    \n        \n            \n                \n                    \n                    ViewModel\n                \n            \n            \n                \n                        literal type | literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NO_ERRORS   (src/.../validation-errors.component.ts)\n                        \n                        \n                            NO_VALIDATION_STATE   (src/.../validation-errors.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/validation-errors.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NO_ERRORS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ViewModel\n\n                    \n                \n                \n                    \n                        Default value : {\n  shouldDisplayErrors: false\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NO_VALIDATION_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidationState\n\n                    \n                \n                \n                    \n                        Default value : {\n  control: null,\n  errorsDisplayed: null,\n  errors: null\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
